# Generated by Django 3.0.8 on 2021-01-05 11:37

import costasiella.modules.encrypted_fields
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import sorl.thumbnail.fields


class Migration(migrations.Migration):

    replaces = [('costasiella', '0001_initial'), ('costasiella', '0002_auto_20200328_2000'), ('costasiella', '0003_financeorder'), ('costasiella', '0004_auto_20200404_0905'), ('costasiella', '0005_auto_20200409_1550'), ('costasiella', '0006_financeorderitem'), ('costasiella', '0007_financeorderitem_organization_classpass'), ('costasiella', '0008_auto_20200410_1226'), ('costasiella', '0009_auto_20200410_1227'), ('costasiella', '0010_auto_20200410_1229'), ('costasiella', '0011_auto_20200410_1302'), ('costasiella', '0012_systemsetting'), ('costasiella', '0013_account_mollie_customer_id'), ('costasiella', '0014_auto_20200412_1422'), ('costasiella', '0015_integrationlogmollie'), ('costasiella', '0016_auto_20200412_1444'), ('costasiella', '0017_integrationlogmollie_log_source'), ('costasiella', '0018_auto_20200412_1458'), ('costasiella', '0019_integrationlogmollie_payment_data'), ('costasiella', '0020_financeorder_finance_invoice'), ('costasiella', '0021_financeinvoicepayment_online_payment_id'), ('costasiella', '0022_auto_20200415_1559'), ('costasiella', '0023_auto_20200415_1559'), ('costasiella', '0024_systemmailtemplate'), ('costasiella', '0025_auto_20200417_1312'), ('costasiella', '0026_auto_20200501_1238'), ('costasiella', '0027_auto_20200505_1618'), ('costasiella', '0028_auto_20200604_1543'), ('costasiella', '0029_scheduleitemmail'), ('costasiella', '0030_auto_20200616_1407'), ('costasiella', '0031_scheduleitemweeklyotc_info_mail_content'), ('costasiella', '0032_accountsubscriptioncredit'), ('costasiella', '0033_auto_20200805_1334'), ('costasiella', '0034_auto_20200809_2133'), ('costasiella', '0035_accountsubscriptionpause'), ('costasiella', '0036_accountsubscriptionpause_description'), ('costasiella', '0037_accountsubscriptionblock'), ('costasiella', '0038_auto_20200818_1744'), ('costasiella', '0039_auto_20200822_1112'), ('costasiella', '0040_financeorderitem_organization_subscription'), ('costasiella', '0041_auto_20200909_0959'), ('costasiella', '0042_scheduleevent'), ('costasiella', '0043_scheduleitem_schedule_event'), ('costasiella', '0044_scheduleeventticket'), ('costasiella', '0045_auto_20201019_1556'), ('costasiella', '0046_auto_20201105_2211'), ('costasiella', '0047_auto_20201109_1655'), ('costasiella', '0048_auto_20201113_2154'), ('costasiella', '0049_scheduleitem_spaces'), ('costasiella', '0050_auto_20201114_0858'), ('costasiella', '0051_scheduleitem_count_attendance'), ('costasiella', '0052_auto_20201114_1143'), ('costasiella', '0053_auto_20201122_1731'), ('costasiella', '0054_scheduleeventticketscheduleitem_included'), ('costasiella', '0055_accountscheduleeventticket'), ('costasiella', '0056_financeinvoiceitem_schedule_event_ticket'), ('costasiella', '0057_auto_20201212_1305'), ('costasiella', '0058_auto_20201218_2126'), ('costasiella', '0059_scheduleeventmedia'), ('costasiella', '0060_auto_20201227_1526'), ('costasiella', '0061_auto_20201228_1308'), ('costasiella', '0062_auto_20201229_1143'), ('costasiella', '0063_financeorderitem_schedule_event_ticket'), ('costasiella', '0064_organization_logo_login')]

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('customer', models.BooleanField(default=True)),
                ('teacher', models.BooleanField(default=False)),
                ('employee', models.BooleanField(default=False)),
                ('full_name', models.CharField(default='', editable=False, max_length=255)),
                ('gender', costasiella.modules.encrypted_fields.EncryptedTextField(default='')),
                ('date_of_birth', costasiella.modules.encrypted_fields.EncryptedTextField(default='')),
                ('address', costasiella.modules.encrypted_fields.EncryptedTextField(default='')),
                ('postcode', costasiella.modules.encrypted_fields.EncryptedTextField(default='')),
                ('city', costasiella.modules.encrypted_fields.EncryptedTextField(default='')),
                ('country', costasiella.modules.encrypted_fields.EncryptedTextField(default='')),
                ('phone', costasiella.modules.encrypted_fields.EncryptedTextField(default='')),
                ('mobile', costasiella.modules.encrypted_fields.EncryptedTextField(default='')),
                ('emergency', costasiella.modules.encrypted_fields.EncryptedTextField(default='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
                ('mollie_customer_id', models.CharField(default='', editable=False, max_length=255)),
            ],
            options={
                'permissions': [('view_automation', 'Can view automation menu'), ('view_insight', 'Can view insight menu'), ('view_insightclasspassesactive', 'Can view insight classpasses active'), ('view_insightclasspassessold', 'Can view insight classpasses sold'), ('view_insightsubscriptionsactive', 'Can view insight subscriptions active'), ('view_insightsubscriptionssold', 'Can view insight subscriptions sold'), ('view_selfcheckin', 'Can use the selfcheckin feature')],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AppSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_format', models.CharField(choices=[('YYYY-MM-DD', 'YYYY-MM-DD'), ('MM-DD-YYYY', 'MM-DD-YYYY'), ('DD-MM-YYYY', 'DD-MM-YYYY')], default='YYYY-MM-DD', max_length=255)),
                ('time_format', models.CharField(choices=[('24', '24 Hr (HH:mm)'), ('12', '12 Hr (hh:mm am/pm)')], default='24', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='FinanceCostCenter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255)),
                ('code', models.CharField(default='', help_text='Cost center code in your accounting software.', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='FinanceGLAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255)),
                ('code', models.CharField(default='', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='FinanceInvoiceGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('display_public', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('next_id', models.PositiveIntegerField(default=1)),
                ('due_after_days', models.PositiveSmallIntegerField(default=30)),
                ('prefix', models.CharField(default='INV', max_length=255)),
                ('prefix_year', models.BooleanField(default=True)),
                ('auto_reset_prefix_year', models.BooleanField(default=True)),
                ('terms', models.TextField(default='')),
                ('footer', models.TextField(default='')),
                ('code', models.CharField(default='', help_text='Journal code in your accounting software.', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='FinancePaymentMethod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('system_method', models.BooleanField(default=False, editable=False)),
                ('name', models.CharField(max_length=255)),
                ('code', models.CharField(default='', help_text='Payment method/condition code in your accounting software.', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='FinanceTaxRate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255)),
                ('percentage', models.DecimalField(decimal_places=2, max_digits=20)),
                ('rate_type', models.CharField(choices=[('IN', 'Inclusive'), ('EX', 'Exclusive')], default='IN', max_length=2)),
                ('code', models.CharField(default='', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255)),
                ('address', models.TextField(default='')),
                ('phone', models.CharField(default='', max_length=255)),
                ('email', models.EmailField(default='', max_length=254)),
                ('registration', models.CharField(default='', max_length=255)),
                ('tax_registration', models.CharField(default='', max_length=255)),
                ('logo_login', sorl.thumbnail.fields.ImageField(default=None, upload_to='organization')),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationAppointmentCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('display_public', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationClasspass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('display_public', models.BooleanField(default=True)),
                ('display_shop', models.BooleanField(default=True)),
                ('trial_pass', models.BooleanField(default=False)),
                ('trial_times', models.PositiveIntegerField(default=1, help_text='Number of times this pass can be bought by a customer. (Only used when trial card is selected)')),
                ('name', models.CharField(max_length=255)),
                ('description', models.CharField(max_length=255)),
                ('price', models.DecimalField(decimal_places=2, max_digits=20)),
                ('validity', models.PositiveIntegerField()),
                ('validity_unit', models.CharField(choices=[('DAYS', 'Days'), ('WEEKS', 'Weeks'), ('MONTHS', 'Months')], default='DAYS', max_length=10)),
                ('classes', models.PositiveSmallIntegerField()),
                ('unlimited', models.BooleanField(default=False)),
                ('quick_stats_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('finance_costcenter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='costasiella.FinanceCostCenter')),
                ('finance_glaccount', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='costasiella.FinanceGLAccount')),
                ('finance_tax_rate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.FinanceTaxRate')),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationClasspassGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationClasstype',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('display_public', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('url_website', models.URLField()),
                ('image', sorl.thumbnail.fields.ImageField(default=None, upload_to='organization_classtype_images')),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationDiscovery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('display_public', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationLocationRoom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('display_public', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255)),
                ('organization_location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.OrganizationLocation')),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationMembership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('display_public', models.BooleanField(default=True)),
                ('display_shop', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=20)),
                ('validity', models.PositiveIntegerField()),
                ('validity_unit', models.CharField(choices=[('DAYS', 'Days'), ('WEEKS', 'Weeks'), ('MONTHS', 'Months')], default='DAYS', max_length=10)),
                ('terms_and_conditions', models.TextField()),
                ('finance_costcenter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='costasiella.FinanceCostCenter')),
                ('finance_glaccount', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='costasiella.FinanceGLAccount')),
                ('finance_tax_rate', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='costasiella.FinanceTaxRate')),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationSubscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('display_public', models.BooleanField(default=True)),
                ('display_shop', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('sort_order', models.PositiveIntegerField(default=0)),
                ('min_duration', models.PositiveIntegerField()),
                ('classes', models.PositiveIntegerField()),
                ('subscription_unit', models.CharField(choices=[('WEEK', 'Week'), ('MONTH', 'Month')], default='WEEK', max_length=10)),
                ('reconciliation_classes', models.PositiveSmallIntegerField(default=0)),
                ('credit_validity', models.PositiveIntegerField(default=1)),
                ('unlimited', models.BooleanField(default=False)),
                ('terms_and_conditions', models.TextField()),
                ('registration_fee', models.DecimalField(decimal_places=2, max_digits=20)),
                ('quick_stats_amount', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('finance_costcenter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='costasiella.FinanceCostCenter')),
                ('finance_glaccount', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='costasiella.FinanceGLAccount')),
                ('organization_membership', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='costasiella.OrganizationMembership')),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationSubscriptionGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='ScheduleItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('schedule_item_type', models.CharField(choices=[('CLASS', 'Class'), ('APPOINTMENT', 'Appointment')], max_length=50)),
                ('frequency_type', models.CharField(choices=[('SPECIFIC', 'Specific'), ('WEEKLY', 'Weekly')], max_length=50)),
                ('frequency_interval', models.PositiveSmallIntegerField(choices=[(0, 'Interval unused'), (1, 'Monday'), (2, 'Tuesday'), (3, 'Wednesday'), (4, 'Thursday'), (5, 'Friday'), (6, 'Saturday'), (7, 'Sunday'), (7, 'Sunday')])),
                ('date_start', models.DateField()),
                ('date_end', models.DateField(default=None, null=True)),
                ('time_start', models.TimeField()),
                ('time_end', models.TimeField()),
                ('display_public', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[['', 'Regular'], ['CANCELLED', 'Cancelled'], ['OPEN', 'No teacher']], default='', max_length=255)),
                ('description', models.CharField(default='', max_length=255)),
                ('role', models.CharField(choices=[['', 'Regular'], ['SUB', 'Subteacher'], ['ASSISTANT', 'Assistant'], ['KARMA', 'Karma']], default='', max_length=50)),
                ('role_2', models.CharField(choices=[['', 'Regular'], ['SUB', 'Subteacher'], ['ASSISTANT', 'Assistant'], ['KARMA', 'Karma']], default='', max_length=50)),
                ('account', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='si_account', to=settings.AUTH_USER_MODEL)),
                ('account_2', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='si_account_2', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': [('view_scheduleclass', 'Can view schedule class'), ('add_scheduleclass', 'Can add schedule class'), ('change_scheduleclass', 'Can change schedule class'), ('delete_scheduleclass', 'Can delete schedule class'), ('view_scheduleappointment', 'Can view schedule appointment'), ('add_scheduleappointment', 'Can add schedule appointment'), ('change_scheduleappointment', 'Can change schedule appointment'), ('delete_scheduleappointment', 'Can delete schedule appointment')],
            },
        ),
        migrations.CreateModel(
            name='AccountTeacherProfile',
            fields=[
                ('account', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('classes', models.BooleanField(default=True)),
                ('appointments', models.BooleanField(default=False)),
                ('events', models.BooleanField(default=False)),
                ('role', costasiella.modules.encrypted_fields.EncryptedTextField(default='')),
                ('education', costasiella.modules.encrypted_fields.EncryptedTextField(default='')),
                ('bio', costasiella.modules.encrypted_fields.EncryptedTextField(default='')),
                ('url_bio', costasiella.modules.encrypted_fields.EncryptedTextField(default='')),
                ('url_website', costasiella.modules.encrypted_fields.EncryptedTextField(default='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ScheduleItemWeeklyOTC',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('status', models.CharField(choices=[['', 'Regular'], ['CANCELLED', 'Cancelled'], ['OPEN', 'No teacher']], default='', max_length=255)),
                ('description', models.CharField(default='', max_length=255)),
                ('role', models.CharField(choices=[['', 'Regular'], ['SUB', 'Subteacher'], ['ASSISTANT', 'Assistant'], ['KARMA', 'Karma']], default='', max_length=50)),
                ('role_2', models.CharField(choices=[['', 'Regular'], ['SUB', 'Subteacher'], ['ASSISTANT', 'Assistant'], ['KARMA', 'Karma']], default='', max_length=50)),
                ('time_start', models.TimeField(null=True)),
                ('time_end', models.TimeField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='otc_account', to=settings.AUTH_USER_MODEL)),
                ('account_2', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='otc_account_2', to=settings.AUTH_USER_MODEL)),
                ('organization_classtype', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='costasiella.OrganizationClasstype')),
                ('organization_level', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='costasiella.OrganizationLevel')),
                ('organization_location_room', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='costasiella.OrganizationLocationRoom')),
                ('schedule_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.ScheduleItem')),
                ('info_mail_content', models.TextField(default='')),
                ('spaces', models.IntegerField(default=0, help_text='Total spaces for this class.', null=True)),
                ('walk_in_spaces', models.IntegerField(default=0, help_text="Number of walk-in spaces (Can't be booked online).", null=True)),
            ],
            options={
                'permissions': [('view_scheduleclassweeklyotc', 'Can view schedule class weekly one time change'), ('add_scheduleclassweeklyotc', 'Can add schedule class weekly one time change'), ('change_scheduleclassweeklyotc', 'Can change schedule class weekly one time change'), ('delete_scheduleclassweeklyotc', 'Can delete schedule class weekly one time change')],
            },
        ),
        migrations.CreateModel(
            name='ScheduleItemTeacherAvailable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_start', models.DateField()),
                ('date_end', models.DateField(default=None, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('schedule_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.ScheduleItem')),
            ],
        ),
        migrations.CreateModel(
            name='ScheduleItemTeacher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[['', 'Regular'], ['SUB', 'Subteacher'], ['ASSISTANT', 'Assistant'], ['KARMA', 'Karma']], max_length=50)),
                ('role_2', models.CharField(choices=[['', 'Regular'], ['SUB', 'Subteacher'], ['ASSISTANT', 'Assistant'], ['KARMA', 'Karma']], default='', max_length=50)),
                ('date_start', models.DateField()),
                ('date_end', models.DateField(default=None, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('account_2', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='account_2', to=settings.AUTH_USER_MODEL)),
                ('schedule_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.ScheduleItem')),
            ],
        ),
        migrations.CreateModel(
            name='ScheduleItemPrice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_start', models.DateField()),
                ('date_end', models.DateField(default=None, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('organization_classpass_dropin', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='organizationclasspassesdropin', to='costasiella.OrganizationClasspass')),
                ('organization_classpass_trial', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='organizationclasspassestrial', to='costasiella.OrganizationClasspass')),
                ('schedule_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.ScheduleItem')),
            ],
        ),
        migrations.CreateModel(
            name='ScheduleItemOrganizationSubscriptionGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enroll', models.BooleanField(default=False)),
                ('shop_book', models.BooleanField(default=False)),
                ('attend', models.BooleanField(default=False)),
                ('organization_subscription_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.OrganizationSubscriptionGroup')),
                ('schedule_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.ScheduleItem')),
            ],
        ),
        migrations.CreateModel(
            name='ScheduleItemOrganizationClasspassGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shop_book', models.BooleanField(default=False)),
                ('attend', models.BooleanField(default=False)),
                ('organization_classpass_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.OrganizationClasspassGroup')),
                ('schedule_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.ScheduleItem')),
            ],
        ),
        migrations.AddField(
            model_name='scheduleitem',
            name='organization_classpass_groups',
            field=models.ManyToManyField(related_name='classpass_groups', through='costasiella.ScheduleItemOrganizationClasspassGroup', to='costasiella.OrganizationClasspassGroup'),
        ),
        migrations.AddField(
            model_name='scheduleitem',
            name='organization_classtype',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='costasiella.OrganizationClasstype'),
        ),
        migrations.AddField(
            model_name='scheduleitem',
            name='organization_level',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='costasiella.OrganizationLevel'),
        ),
        migrations.AddField(
            model_name='scheduleitem',
            name='organization_location_room',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.OrganizationLocationRoom'),
        ),
        migrations.AddField(
            model_name='scheduleitem',
            name='organization_subscription_groups',
            field=models.ManyToManyField(related_name='subscription_groups', through='costasiella.ScheduleItemOrganizationSubscriptionGroup', to='costasiella.OrganizationSubscriptionGroup'),
        ),
        migrations.CreateModel(
            name='OrganizationSubscriptionPrice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=20)),
                ('date_start', models.DateField()),
                ('date_end', models.DateField(null=True)),
                ('finance_tax_rate', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='costasiella.FinanceTaxRate')),
                ('organization_subscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.OrganizationSubscription')),
            ],
            options={
                'ordering': ['-date_start'],
            },
        ),
        migrations.CreateModel(
            name='OrganizationSubscriptionGroupSubscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organization_subscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.OrganizationSubscription')),
                ('organization_subscription_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.OrganizationSubscriptionGroup')),
            ],
        ),
        migrations.AddField(
            model_name='organizationsubscriptiongroup',
            name='organization_subscriptions',
            field=models.ManyToManyField(related_name='subscriptions', through='costasiella.OrganizationSubscriptionGroupSubscription', to='costasiella.OrganizationSubscription'),
        ),
        migrations.CreateModel(
            name='OrganizationDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[['TERMS_AND_CONDITIONS', 'Terms and conditions'], ['PRIVACY_POLICY', 'Privacy policy']], max_length=50)),
                ('version', models.CharField(default='', max_length=50)),
                ('date_start', models.DateField()),
                ('date_end', models.DateField(null=True)),
                ('document', models.FileField(default=None, upload_to='organization_document')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.Organization')),
            ],
            options={
                'ordering': ['-date_start'],
            },
        ),
        migrations.CreateModel(
            name='OrganizationClasspassGroupClasspass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organization_classpass', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.OrganizationClasspass')),
                ('organization_classpass_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.OrganizationClasspassGroup')),
            ],
        ),
        migrations.AddField(
            model_name='organizationclasspassgroup',
            name='organization_classpasses',
            field=models.ManyToManyField(related_name='classpasses', through='costasiella.OrganizationClasspassGroupClasspass', to='costasiella.OrganizationClasspass'),
        ),
        migrations.AddField(
            model_name='organizationclasspass',
            name='organization_membership',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='costasiella.OrganizationMembership'),
        ),
        migrations.CreateModel(
            name='OrganizationAppointment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('display_public', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255)),
                ('finance_costcenter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='costasiella.FinanceCostCenter')),
                ('finance_glaccount', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='costasiella.FinanceGLAccount')),
                ('organization_appointment_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.OrganizationAppointmentCategory')),
            ],
        ),
        migrations.CreateModel(
            name='FinanceInvoiceGroupDefault',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_type', models.CharField(default='', max_length=255)),
                ('finance_invoice_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.FinanceInvoiceGroup')),
            ],
        ),
        migrations.CreateModel(
            name='FinanceInvoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('teacher_payment', models.BooleanField(default=False)),
                ('employee_claim', models.BooleanField(default=False)),
                ('relation_company', models.CharField(default='', max_length=255)),
                ('relation_company_registration', models.CharField(default='', max_length=255)),
                ('relation_company_tax_registration', models.CharField(default='', max_length=255)),
                ('relation_contact_name', models.CharField(default='', max_length=255)),
                ('relation_address', models.CharField(default='', max_length=255)),
                ('relation_postcode', models.CharField(default='', max_length=255)),
                ('relation_city', models.CharField(default='', max_length=255)),
                ('relation_country', models.CharField(default='', max_length=255)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('SENT', 'Sent'), ('PAID', 'Paid'), ('CANCELLED', 'Cancelled')], default='DRAFT', max_length=255)),
                ('summary', models.CharField(default='', max_length=255)),
                ('invoice_number', models.CharField(default='', max_length=255)),
                ('date_sent', models.DateField()),
                ('date_due', models.DateField()),
                ('terms', models.TextField(default='')),
                ('footer', models.TextField(default='')),
                ('note', models.TextField(default='')),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('tax', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('total', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('paid', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('balance', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='invoices', to=settings.AUTH_USER_MODEL)),
                ('finance_invoice_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.FinanceInvoiceGroup')),
                ('finance_payment_method', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='costasiella.FinancePaymentMethod')),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationAppointmentPrice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=20)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('finance_tax_rate', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='costasiella.FinanceTaxRate')),
                ('organization_appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.OrganizationAppointment')),
            ],
            options={
                'unique_together': {('account', 'organization_appointment')},
            },
        ),
        migrations.AlterField(
            model_name='organizationclasspass',
            name='description',
            field=models.TextField(),
        ),
        migrations.CreateModel(
            name='FinanceOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('RECEIVED', 'Received'), ('AWAITING_PAYMENT', 'Awaiting payment'), ('PAID', 'Paid'), ('DELIVERED', 'Delivered'), ('CANCELLED', 'Cancelled')], default='RECEIVED', max_length=255)),
                ('message', models.TextField(default='')),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('tax', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('total', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('finance_invoice', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orders', to='costasiella.FinanceInvoice')),
            ],
        ),
        migrations.CreateModel(
            name='SystemSetting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('setting', models.CharField(max_length=255)),
                ('value', costasiella.modules.encrypted_fields.EncryptedTextField(default='')),
            ],
        ),
        migrations.CreateModel(
            name='IntegrationLogMollie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mollie_payment_id', models.CharField(max_length=255)),
                ('recurring_type', models.CharField(max_length=255, null=True)),
                ('webhook_url', models.TextField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('finance_invoice', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='costasiella.FinanceInvoice')),
                ('finance_order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='costasiella.FinanceOrder')),
                ('log_source', models.CharField(choices=[('ORDER_PAY', 'Order pay'), ('INVOICE_PAY', 'Invoice pay'), ('WEBHOOK', 'Webhook')], default='ORDER_PAY', max_length=255)),
                ('payment_data', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FinanceInvoicePayment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=20)),
                ('note', models.TextField(default='')),
                ('finance_invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='costasiella.FinanceInvoice')),
                ('finance_payment_method', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='costasiella.FinancePaymentMethod')),
                ('online_payment_id', models.TextField(null=True)),
                ('online_chargeback_id', models.TextField(null=True)),
                ('online_refund_id', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SystemMailTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(editable=False, max_length=255)),
                ('subject', models.TextField()),
                ('title', models.TextField()),
                ('description', models.TextField(null=True)),
                ('content', models.TextField()),
                ('comments', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AccountAcceptedDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_accepted', models.DateTimeField(auto_now_add=True)),
                ('client_ip', costasiella.modules.encrypted_fields.EncryptedTextField(default='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accepted_documents', to=settings.AUTH_USER_MODEL)),
                ('document', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='costasiella.OrganizationDocument')),
            ],
        ),
        migrations.CreateModel(
            name='AccountClasspass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_start', models.DateField()),
                ('date_end', models.DateField(null=True)),
                ('note', models.TextField(default='')),
                ('classes_remaining', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='classpasses', to=settings.AUTH_USER_MODEL)),
                ('organization_classpass', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.OrganizationClasspass')),
            ],
        ),
        migrations.CreateModel(
            name='AccountMembership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_start', models.DateField()),
                ('date_end', models.DateField(null=True)),
                ('note', models.TextField(default='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='memberships', to=settings.AUTH_USER_MODEL)),
                ('finance_payment_method', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='costasiella.FinancePaymentMethod')),
                ('organization_membership', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.OrganizationMembership')),
            ],
        ),
        migrations.CreateModel(
            name='AccountSubscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_start', models.DateField()),
                ('date_end', models.DateField(null=True)),
                ('note', models.TextField(default='')),
                ('registration_fee_paid', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to=settings.AUTH_USER_MODEL)),
                ('finance_payment_method', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='costasiella.FinancePaymentMethod')),
                ('organization_subscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.OrganizationSubscription')),
            ],
        ),
        migrations.CreateModel(
            name='FinanceInvoiceItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('line_number', models.PositiveSmallIntegerField(default=0)),
                ('product_name', models.CharField(max_length=255)),
                ('description', models.TextField(default='')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=20)),
                ('price', models.DecimalField(decimal_places=2, max_digits=20)),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('tax', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('total', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('account_classpass', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='invoice_items', to='costasiella.AccountClasspass')),
                ('finance_costcenter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='costasiella.FinanceCostCenter')),
                ('finance_glaccount', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='costasiella.FinanceGLAccount')),
                ('finance_invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='costasiella.FinanceInvoice')),
                ('finance_tax_rate', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='costasiella.FinanceTaxRate')),
                ('account_subscription', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='invoice_items', to='costasiella.AccountSubscription')),
                ('subscription_month', models.IntegerField(null=True)),
                ('subscription_year', models.IntegerField(null=True)),
            ],
            options={
                'ordering': ('finance_invoice', 'line_number'),
            },
        ),
        migrations.CreateModel(
            name='ScheduleItemAttendance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_has_membership', models.BooleanField(default=False)),
                ('attendance_type', models.CharField(choices=[['CLASSPASS', 'Classpass'], ['SUBSCRIPTION', 'Subscription'], ['COMPLEMENTARY', 'Complementary'], ['REVIEW', 'To be reviewed'], ['RECONCILE_LATER', 'Reconcile later']], max_length=255)),
                ('date', models.DateField()),
                ('online_booking', models.BooleanField(default=False)),
                ('booking_status', models.CharField(choices=[['BOOKED', 'Booked'], ['ATTENDING', 'Attending'], ['CANCELLED', 'Cancelled']], max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('account_classpass', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='costasiella.AccountClasspass')),
                ('account_subscription', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='costasiella.AccountSubscription')),
                ('finance_invoice_item', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='costasiella.FinanceInvoiceItem')),
                ('schedule_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.ScheduleItem')),
            ],
        ),
        migrations.AddField(
            model_name='scheduleitem',
            name='info_mail_content',
            field=models.TextField(default=''),
        ),
        migrations.CreateModel(
            name='AccountSubscriptionPause',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_start', models.DateField()),
                ('date_end', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account_subscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pauses', to='costasiella.AccountSubscription')),
                ('description', models.TextField(default='')),
            ],
        ),
        migrations.CreateModel(
            name='AccountSubscriptionBlock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_start', models.DateField()),
                ('date_end', models.DateField()),
                ('description', models.TextField(default='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account_subscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blocks', to='costasiella.AccountSubscription')),
            ],
        ),
        migrations.CreateModel(
            name='AccountSubscriptionCredit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mutation_type', models.CharField(choices=[('ADD', 'Add'), ('SUB', 'Subtract')], default='ADD', max_length=255)),
                ('mutation_amount', models.DecimalField(decimal_places=1, max_digits=20)),
                ('description', models.TextField(default='')),
                ('subscription_month', models.IntegerField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account_subscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='credits', to='costasiella.AccountSubscription')),
                ('schedule_item_attendance', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='costasiella.ScheduleItemAttendance')),
                ('subscription_year', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AccountSubscriptionAltPrice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subscription_year', models.IntegerField(null=True)),
                ('subscription_month', models.IntegerField(null=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=20)),
                ('description', models.TextField(default='')),
                ('note', models.TextField(default='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account_subscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alt_prices', to='costasiella.AccountSubscription')),
            ],
        ),
        migrations.CreateModel(
            name='ScheduleEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('display_public', models.BooleanField(default=False)),
                ('auto_send_info_mail', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255)),
                ('tagline', models.CharField(max_length=255)),
                ('preview', models.TextField(default='')),
                ('description', models.TextField(default='')),
                ('date_start', models.DateField(null=True)),
                ('date_end', models.DateField(default=None, null=True)),
                ('time_start', models.TimeField(null=True)),
                ('time_end', models.TimeField(null=True)),
                ('info_mail_content', models.TextField(default='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('organization_level', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='costasiella.OrganizationLevel')),
                ('organization_location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.OrganizationLocation')),
                ('teacher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('teacher_2', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='teacher_2', to=settings.AUTH_USER_MODEL)),
                ('display_shop', models.BooleanField(default=False)),
            ],
        ),
        migrations.AlterField(
            model_name='organizationclasspass',
            name='finance_costcenter',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='costasiella.FinanceCostCenter'),
        ),
        migrations.AlterField(
            model_name='organizationclasspass',
            name='finance_glaccount',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='costasiella.FinanceGLAccount'),
        ),
        migrations.AlterField(
            model_name='organizationclasspass',
            name='finance_tax_rate',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='costasiella.FinanceTaxRate'),
        ),
        migrations.AddField(
            model_name='scheduleitem',
            name='schedule_event',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='schedule_items', to='costasiella.ScheduleEvent'),
        ),
        migrations.CreateModel(
            name='ScheduleEventTicket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_event', models.BooleanField(default=False)),
                ('deletable', models.BooleanField(default=True)),
                ('display_public', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(default='')),
                ('price', models.DecimalField(decimal_places=2, max_digits=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('finance_costcenter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='costasiella.FinanceCostCenter')),
                ('finance_glaccount', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='costasiella.FinanceGLAccount')),
                ('finance_tax_rate', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='costasiella.FinanceTaxRate')),
                ('schedule_event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.ScheduleEvent')),
            ],
        ),
        migrations.AddField(
            model_name='scheduleitem',
            name='name',
            field=models.CharField(max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='scheduleitem',
            name='frequency_interval',
            field=models.PositiveSmallIntegerField(choices=[(0, 'Interval unused'), (1, 'Monday'), (2, 'Tuesday'), (3, 'Wednesday'), (4, 'Thursday'), (5, 'Friday'), (6, 'Saturday'), (7, 'Sunday')]),
        ),
        migrations.AlterField(
            model_name='scheduleitem',
            name='schedule_item_type',
            field=models.CharField(choices=[('CLASS', 'Class'), ('EVENT_ACTIVITY', 'Event Activity'), ('APPOINTMENT', 'Appointment')], max_length=50),
        ),
        migrations.AddField(
            model_name='scheduleitem',
            name='walk_in_spaces',
            field=models.IntegerField(default=0, help_text="Number of walk-in spaces (Can't be booked online).", null=True),
        ),
        migrations.AddField(
            model_name='scheduleitem',
            name='spaces',
            field=models.IntegerField(default=0, help_text='Total spaces for this class.', null=True),
        ),
        migrations.AddField(
            model_name='scheduleitem',
            name='count_attendance',
            field=models.IntegerField(null=True),
        ),
        migrations.CreateModel(
            name='ScheduleEventTicketScheduleItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('schedule_event_ticket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.ScheduleEventTicket')),
                ('schedule_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.ScheduleItem')),
                ('included', models.BooleanField(default=False)),
            ],
        ),
        migrations.AddField(
            model_name='scheduleeventticket',
            name='schedule_items',
            field=models.ManyToManyField(related_name='schedule_items', through='costasiella.ScheduleEventTicketScheduleItem', to='costasiella.ScheduleItem'),
        ),
        migrations.CreateModel(
            name='AccountScheduleEventTicket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cancelled', models.BooleanField(default=False)),
                ('payment_confirmation', models.BooleanField(default=False)),
                ('info_mail_sent', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedule_event_tickets', to=settings.AUTH_USER_MODEL)),
                ('schedule_event_ticket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accounts', to='costasiella.ScheduleEventTicket')),
            ],
        ),
        migrations.AddField(
            model_name='scheduleitemattendance',
            name='account_schedule_event_ticket',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='costasiella.AccountScheduleEventTicket'),
        ),
        migrations.AlterField(
            model_name='scheduleitemattendance',
            name='attendance_type',
            field=models.CharField(choices=[['CLASSPASS', 'Classpass'], ['SUBSCRIPTION', 'Subscription'], ['COMPLEMENTARY', 'Complementary'], ['REVIEW', 'To be reviewed'], ['RECONCILE_LATER', 'Reconcile later'], ['SCHEDULE_EVENT_TICKET', 'Schedule event ticket']], max_length=255),
        ),
        migrations.AddField(
            model_name='financeinvoiceitem',
            name='account_schedule_event_ticket',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='invoice_items', to='costasiella.AccountScheduleEventTicket'),
        ),
        migrations.CreateModel(
            name='ScheduleEventMedia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.PositiveIntegerField(default=0)),
                ('description', models.CharField(max_length=255)),
                ('image', sorl.thumbnail.fields.ImageField(default=None, upload_to='schedule_event_media')),
                ('schedule_event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='media', to='costasiella.ScheduleEvent')),
            ],
        ),
        migrations.AlterField(
            model_name='scheduleeventticket',
            name='schedule_event',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tickets', to='costasiella.ScheduleEvent'),
        ),
        migrations.AlterField(
            model_name='scheduleeventticketscheduleitem',
            name='schedule_event_ticket',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ticket_schedule_items', to='costasiella.ScheduleEventTicket'),
        ),
        migrations.CreateModel(
            name='FinanceOrderItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attendance_type', models.CharField(choices=[['CLASSPASS', 'Classpass'], ['SUBSCRIPTION', 'Subscription'], ['COMPLEMENTARY', 'Complementary'], ['REVIEW', 'To be reviewed'], ['RECONCILE_LATER', 'Reconcile later'], ['SCHEDULE_EVENT_TICKET', 'Schedule event ticket']], max_length=255, null=True)),
                ('attendance_date', models.DateField(null=True)),
                ('product_name', models.CharField(max_length=255)),
                ('description', models.TextField(default='')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=20)),
                ('price', models.DecimalField(decimal_places=2, max_digits=20)),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('tax', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('total', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('finance_costcenter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='costasiella.FinanceCostCenter')),
                ('finance_glaccount', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='costasiella.FinanceGLAccount')),
                ('finance_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='costasiella.FinanceOrder')),
                ('finance_tax_rate', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='costasiella.FinanceTaxRate')),
                ('schedule_item', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='costasiella.ScheduleItem')),
                ('organization_classpass', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='costasiella.OrganizationClasspass')),
                ('organization_subscription', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='costasiella.OrganizationSubscription')),
                ('schedule_event_ticket', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='costasiella.ScheduleEventTicket')),
            ],
        ),
    ]
