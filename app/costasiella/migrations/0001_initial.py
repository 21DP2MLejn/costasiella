# Generated by Django 2.2.2 on 2019-07-20 12:03

import costasiella.modules.encrypted_fields
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import sorl.thumbnail.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('customer', models.BooleanField(default=True)),
                ('teacher', models.BooleanField(default=False)),
                ('employee', models.BooleanField(default=False)),
                ('full_name', models.CharField(default='', editable=False, max_length=255)),
                ('gender', costasiella.modules.encrypted_fields.EncryptedTextField(default='')),
                ('date_of_birth', costasiella.modules.encrypted_fields.EncryptedTextField(default='')),
                ('address', costasiella.modules.encrypted_fields.EncryptedTextField(default='')),
                ('postcode', costasiella.modules.encrypted_fields.EncryptedTextField(default='')),
                ('city', costasiella.modules.encrypted_fields.EncryptedTextField(default='')),
                ('country', costasiella.modules.encrypted_fields.EncryptedTextField(default='')),
                ('phone', costasiella.modules.encrypted_fields.EncryptedTextField(default='')),
                ('mobile', costasiella.modules.encrypted_fields.EncryptedTextField(default='')),
                ('emergency', costasiella.modules.encrypted_fields.EncryptedTextField(default='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='FinanceCostCenter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255)),
                ('code', models.CharField(default='', help_text='Payment method/condition code in your accounting software.', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='FinanceGLAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255)),
                ('code', models.CharField(default='', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='FinancePaymentMethod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('system_method', models.BooleanField(default=False, editable=False)),
                ('name', models.CharField(max_length=255)),
                ('code', models.CharField(default='', help_text='Payment method/condition code in your accounting software.', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='FinanceTaxRate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255)),
                ('percentage', models.IntegerField()),
                ('rate_type', models.CharField(choices=[('IN', 'Inclusive'), ('EX', 'Exclusive')], default='IN', max_length=2)),
                ('code', models.CharField(default='', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationAppointment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('display_public', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationAppointmentCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('display_public', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationClasspass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('display_public', models.BooleanField(default=True)),
                ('display_shop', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.CharField(max_length=255)),
                ('price', models.DecimalField(decimal_places=2, max_digits=20)),
                ('validity', models.PositiveIntegerField()),
                ('validity_unit', models.CharField(choices=[('DAYS', 'Days'), ('WEEKS', 'Weeks'), ('MONTHS', 'Months')], default='DAYS', max_length=10)),
                ('classes', models.PositiveSmallIntegerField()),
                ('unlimited', models.BooleanField(default=False)),
                ('quick_stats_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('finance_costcenter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='costasiella.FinanceCostCenter')),
                ('finance_glaccount', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='costasiella.FinanceGLAccount')),
                ('finance_tax_rate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.FinanceTaxRate')),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationClasspassGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationClasstype',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('display_public', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('url_website', models.URLField()),
                ('image', sorl.thumbnail.fields.ImageField(default=None, upload_to='organization_classtype_images')),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationDiscovery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('display_public', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationLocationRoom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('display_public', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255)),
                ('organization_location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.OrganizationLocation')),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationMembership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('display_public', models.BooleanField(default=True)),
                ('display_shop', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.CharField(max_length=255)),
                ('price', models.DecimalField(decimal_places=2, max_digits=20)),
                ('validity', models.PositiveIntegerField()),
                ('validity_unit', models.CharField(choices=[('DAYS', 'Days'), ('WEEKS', 'Weeks'), ('MONTHS', 'Months')], default='DAYS', max_length=10)),
                ('terms_and_conditions', models.TextField()),
                ('finance_costcenter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='costasiella.FinanceCostCenter')),
                ('finance_glaccount', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='costasiella.FinanceGLAccount')),
                ('finance_tax_rate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.FinanceTaxRate')),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationSubscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('display_public', models.BooleanField(default=True)),
                ('display_shop', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.CharField(max_length=255)),
                ('sort_order', models.PositiveIntegerField(default=0)),
                ('min_duration', models.PositiveIntegerField()),
                ('classes', models.PositiveIntegerField()),
                ('subscription_unit', models.CharField(choices=[('WEEK', 'Week'), ('MONTH', 'Month')], default='DAYS', max_length=10)),
                ('reconciliation_classes', models.PositiveSmallIntegerField(default=0)),
                ('credit_validity', models.PositiveIntegerField(default=1)),
                ('unlimited', models.BooleanField(default=False)),
                ('terms_and_conditions', models.TextField()),
                ('registration_fee', models.DecimalField(decimal_places=2, max_digits=20)),
                ('quick_stats_amount', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('finance_costcenter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='costasiella.FinanceCostCenter')),
                ('finance_glaccount', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='costasiella.FinanceGLAccount')),
                ('organization_membership', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='costasiella.OrganizationMembership')),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationSubscriptionGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='ScheduleItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('schedule_item_type', models.CharField(choices=[('CLASS', 'Class'), ('APPOINTMENT', 'Appointment')], max_length=50)),
                ('frequency_type', models.CharField(choices=[('SPECIFIC', 'Specific'), ('WEEKLY', 'Weekly')], max_length=50)),
                ('frequency_interval', models.PositiveSmallIntegerField(choices=[(0, 'Interval unused'), (1, 'Monday'), (2, 'Tuesday'), (3, 'Wednesday'), (4, 'Thursday'), (5, 'Friday'), (6, 'Saturday'), (7, 'Sunday'), (7, 'Sunday')])),
                ('date_start', models.DateField()),
                ('date_end', models.DateField(default=None, null=True)),
                ('time_start', models.TimeField()),
                ('time_end', models.TimeField()),
                ('display_public', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'permissions': [('view_scheduleclass', 'Can view schedule class'), ('add_scheduleclass', 'Can add schedule class'), ('change_scheduleclass', 'Can change schedule class'), ('delete_scheduleclass', 'Can delete schedule class')],
            },
        ),
        migrations.CreateModel(
            name='AccountTeacherProfile',
            fields=[
                ('account', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('classes', models.BooleanField(default=True)),
                ('appointments', models.BooleanField(default=False)),
                ('events', models.BooleanField(default=False)),
                ('role', costasiella.modules.encrypted_fields.EncryptedTextField(default='')),
                ('education', costasiella.modules.encrypted_fields.EncryptedTextField(default='')),
                ('bio', costasiella.modules.encrypted_fields.EncryptedTextField(default='')),
                ('url_bio', costasiella.modules.encrypted_fields.EncryptedTextField(default='')),
                ('url_website', costasiella.modules.encrypted_fields.EncryptedTextField(default='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ScheduleItemTeacher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[['', 'Regular'], ['SUB', 'Subteacher'], ['ASSISTANT', 'Assistant'], ['KARMA', 'Karma']], max_length=50)),
                ('role_2', models.CharField(choices=[['', 'Regular'], ['SUB', 'Subteacher'], ['ASSISTANT', 'Assistant'], ['KARMA', 'Karma']], default='', max_length=50)),
                ('date_start', models.DateField()),
                ('date_end', models.DateField(default=None, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('account_2', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='account_2', to=settings.AUTH_USER_MODEL)),
                ('schedule_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.ScheduleItem')),
            ],
        ),
        migrations.CreateModel(
            name='ScheduleItemOrganizationSubscriptionGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enroll', models.BooleanField(default=False)),
                ('shop_book', models.BooleanField(default=False)),
                ('attend', models.BooleanField(default=False)),
                ('organization_subscription_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.OrganizationSubscriptionGroup')),
                ('schedule_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.ScheduleItem')),
            ],
        ),
        migrations.CreateModel(
            name='ScheduleItemOrganizationClasspassGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shop_book', models.BooleanField(default=False)),
                ('attend', models.BooleanField(default=False)),
                ('organization_classpass_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.OrganizationClasspassGroup')),
                ('schedule_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.ScheduleItem')),
            ],
        ),
        migrations.AddField(
            model_name='scheduleitem',
            name='organization_classpass_groups',
            field=models.ManyToManyField(related_name='classpass_groups', through='costasiella.ScheduleItemOrganizationClasspassGroup', to='costasiella.OrganizationClasspassGroup'),
        ),
        migrations.AddField(
            model_name='scheduleitem',
            name='organization_classtype',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='costasiella.OrganizationClasstype'),
        ),
        migrations.AddField(
            model_name='scheduleitem',
            name='organization_level',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='costasiella.OrganizationLevel'),
        ),
        migrations.AddField(
            model_name='scheduleitem',
            name='organization_location_room',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.OrganizationLocationRoom'),
        ),
        migrations.AddField(
            model_name='scheduleitem',
            name='organization_subscription_groups',
            field=models.ManyToManyField(related_name='subscription_groups', through='costasiella.ScheduleItemOrganizationSubscriptionGroup', to='costasiella.OrganizationSubscriptionGroup'),
        ),
        migrations.CreateModel(
            name='OrganizationSubscriptionPrice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=20)),
                ('date_start', models.DateField()),
                ('date_end', models.DateField(null=True)),
                ('finance_tax_rate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.FinanceTaxRate')),
                ('organization_subscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.OrganizationSubscription')),
            ],
            options={
                'ordering': ['-date_start'],
            },
        ),
        migrations.CreateModel(
            name='OrganizationSubscriptionGroupSubscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organization_subscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.OrganizationSubscription')),
                ('organization_subscription_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.OrganizationSubscriptionGroup')),
            ],
        ),
        migrations.AddField(
            model_name='organizationsubscriptiongroup',
            name='organization_subscriptions',
            field=models.ManyToManyField(related_name='subscriptions', through='costasiella.OrganizationSubscriptionGroupSubscription', to='costasiella.OrganizationSubscription'),
        ),
        migrations.CreateModel(
            name='OrganizationClasspassGroupClasspass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organization_classpass', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.OrganizationClasspass')),
                ('organization_classpass_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.OrganizationClasspassGroup')),
            ],
        ),
        migrations.AddField(
            model_name='organizationclasspassgroup',
            name='organization_classpasses',
            field=models.ManyToManyField(related_name='classpasses', through='costasiella.OrganizationClasspassGroupClasspass', to='costasiella.OrganizationClasspass'),
        ),
        migrations.AddField(
            model_name='organizationclasspass',
            name='organization_membership',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='costasiella.OrganizationMembership'),
        ),
        migrations.CreateModel(
            name='OrganizationAppointmentPrice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=20)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('finance_costcenter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='costasiella.FinanceCostCenter')),
                ('finance_glaccount', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='costasiella.FinanceGLAccount')),
                ('finance_tax_rate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.FinanceTaxRate')),
                ('organization_appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.OrganizationAppointment')),
            ],
        ),
        migrations.AddField(
            model_name='organizationappointment',
            name='organization_appointment_category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.OrganizationAppointmentCategory'),
        ),
        migrations.CreateModel(
            name='AccountSubscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_start', models.DateField()),
                ('date_end', models.DateField(null=True)),
                ('note', models.TextField(default='')),
                ('registration_fee_paid', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('finance_payment_method', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='costasiella.FinancePaymentMethod')),
                ('organization_subscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.OrganizationSubscription')),
            ],
        ),
        migrations.CreateModel(
            name='AccountMembership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_start', models.DateField()),
                ('date_end', models.DateField(null=True)),
                ('note', models.TextField(default='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('finance_payment_method', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='costasiella.FinancePaymentMethod')),
                ('organization_membership', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.OrganizationMembership')),
            ],
        ),
        migrations.CreateModel(
            name='AccountClasspass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_start', models.DateField()),
                ('date_end', models.DateField(null=True)),
                ('note', models.TextField(default='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('organization_classpass', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.OrganizationClasspass')),
            ],
        ),
    ]
