# Generated by Django 3.2.12 on 2022-02-28 16:04

import costasiella.modules.encrypted_fields
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import sorl.thumbnail.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('customer', models.BooleanField(default=True)),
                ('instructor', models.BooleanField(default=False)),
                ('employee', models.BooleanField(default=False)),
                ('full_name', models.CharField(default='', editable=False, max_length=255)),
                ('gender', costasiella.modules.encrypted_fields.EncryptedTextField(default='')),
                ('date_of_birth', costasiella.modules.encrypted_fields.EncryptedTextField(default='')),
                ('address', costasiella.modules.encrypted_fields.EncryptedTextField(default='')),
                ('postcode', costasiella.modules.encrypted_fields.EncryptedTextField(default='')),
                ('city', costasiella.modules.encrypted_fields.EncryptedTextField(default='')),
                ('country', costasiella.modules.encrypted_fields.EncryptedTextField(default='')),
                ('phone', costasiella.modules.encrypted_fields.EncryptedTextField(default='')),
                ('mobile', costasiella.modules.encrypted_fields.EncryptedTextField(default='')),
                ('emergency', costasiella.modules.encrypted_fields.EncryptedTextField(default='')),
                ('key_number', costasiella.modules.encrypted_fields.EncryptedTextField(default='')),
                ('image', sorl.thumbnail.fields.ImageField(default=None, upload_to='account')),
                ('mollie_customer_id', models.CharField(default='', editable=False, max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'permissions': [('view_automation', 'Can view automation menu'), ('view_insight', 'Can view insight menu'), ('view_insightclasspassesactive', 'Can view insight classpasses active'), ('view_insightclasspassessold', 'Can view insight classpasses sold'), ('view_insightfinancetaxratesummary', 'Can view insight finance tax rates summary'), ('view_insightrevenue', 'Can view insight subscriptions sold'), ('view_insightsubscriptionsactive', 'Can view insight subscriptions active'), ('view_insightsubscriptionssold', 'Can view insight subscriptions sold'), ('view_insighttrialpasses', 'Can view insight trial passes'), ('view_selfcheckin', 'Can use the selfcheckin feature')],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AccountBankAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', costasiella.modules.encrypted_fields.EncryptedTextField(default='')),
                ('holder', costasiella.modules.encrypted_fields.EncryptedTextField(default='')),
                ('bic', costasiella.modules.encrypted_fields.EncryptedTextField(default='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bank_accounts', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AccountClasspass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_start', models.DateField()),
                ('date_end', models.DateField(null=True)),
                ('note', models.TextField(default='')),
                ('classes_remaining', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='classpasses', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AccountMembership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_start', models.DateField()),
                ('date_end', models.DateField(null=True)),
                ('note', models.TextField(default='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='memberships', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AccountScheduleEventTicket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cancelled', models.BooleanField(default=False)),
                ('payment_confirmation', models.BooleanField(default=False)),
                ('info_mail_sent', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedule_event_tickets', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AccountSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_start', models.DateField()),
                ('date_end', models.DateField(null=True)),
                ('note', models.TextField(default='')),
                ('registration_fee_paid', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AppSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_format', models.CharField(choices=[('YYYY-MM-DD', 'YYYY-MM-DD'), ('MM-DD-YYYY', 'MM-DD-YYYY'), ('DD-MM-YYYY', 'DD-MM-YYYY')], default='YYYY-MM-DD', max_length=255)),
                ('time_format', models.CharField(choices=[('24', '24 Hr (HH:mm)'), ('12', '12 Hr (hh:mm am/pm)')], default='24', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Business',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('b2b', models.BooleanField(default=False)),
                ('supplier', models.BooleanField(default=False)),
                ('vip', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255)),
                ('address', models.CharField(default='', max_length=255)),
                ('postcode', models.CharField(default='', max_length=255)),
                ('city', models.CharField(default='', max_length=255)),
                ('country', models.CharField(default='', max_length=255)),
                ('phone', models.CharField(default='', max_length=255)),
                ('phone_2', models.CharField(default='', max_length=255)),
                ('email_contact', models.EmailField(default='', max_length=254)),
                ('email_billing', models.EmailField(default='', max_length=254)),
                ('registration', models.CharField(default='', max_length=255)),
                ('tax_registration', models.CharField(default='', max_length=255)),
                ('mollie_customer_id', models.CharField(default='', editable=False, max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='FinanceCostCenter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255)),
                ('code', models.CharField(default='', help_text='Cost center code in your accounting software.', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='FinanceGLAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255)),
                ('code', models.CharField(default='', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='FinanceInvoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('instructor_payment', models.BooleanField(default=False)),
                ('employee_claim', models.BooleanField(default=False)),
                ('relation_company', models.CharField(default='', max_length=255)),
                ('relation_company_registration', models.CharField(default='', max_length=255)),
                ('relation_company_tax_registration', models.CharField(default='', max_length=255)),
                ('relation_contact_name', models.CharField(default='', max_length=255)),
                ('relation_address', models.CharField(default='', max_length=255)),
                ('relation_postcode', models.CharField(default='', max_length=255)),
                ('relation_city', models.CharField(default='', max_length=255)),
                ('relation_country', models.CharField(default='', max_length=255)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('SENT', 'Sent'), ('PAID', 'Paid'), ('CANCELLED', 'Cancelled')], default='DRAFT', max_length=255)),
                ('summary', models.CharField(default='', max_length=255)),
                ('invoice_number', models.CharField(default='', max_length=255)),
                ('date_sent', models.DateField()),
                ('date_due', models.DateField()),
                ('terms', models.TextField(default='')),
                ('footer', models.TextField(default='')),
                ('note', models.TextField(default='')),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('tax', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('total', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('paid', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('balance', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('credit_invoice_for', models.IntegerField(default=None, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='invoices', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FinanceInvoiceGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('display_public', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('next_id', models.PositiveIntegerField(default=1)),
                ('due_after_days', models.PositiveSmallIntegerField(default=30)),
                ('prefix', models.CharField(default='INV', max_length=255)),
                ('prefix_year', models.BooleanField(default=True)),
                ('auto_reset_prefix_year', models.BooleanField(default=True)),
                ('terms', models.TextField(default='')),
                ('footer', models.TextField(default='')),
                ('code', models.CharField(default='', help_text='Journal code in your accounting software.', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='FinanceInvoiceItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subscription_year', models.IntegerField(null=True)),
                ('subscription_month', models.IntegerField(null=True)),
                ('line_number', models.PositiveSmallIntegerField(default=0)),
                ('product_name', models.CharField(max_length=255)),
                ('description', models.TextField(default='')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=20)),
                ('price', models.DecimalField(decimal_places=2, max_digits=20)),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('tax', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('total', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('account_classpass', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='invoice_items', to='costasiella.accountclasspass')),
                ('account_membership', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='invoice_items', to='costasiella.accountmembership')),
                ('account_schedule_event_ticket', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='invoice_items', to='costasiella.accountscheduleeventticket')),
                ('account_subscription', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='invoice_items', to='costasiella.accountsubscription')),
                ('finance_costcenter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='costasiella.financecostcenter')),
                ('finance_glaccount', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='costasiella.financeglaccount')),
                ('finance_invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='costasiella.financeinvoice')),
            ],
            options={
                'ordering': ('finance_invoice', 'line_number'),
            },
        ),
        migrations.CreateModel(
            name='FinanceOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('RECEIVED', 'Received'), ('AWAITING_PAYMENT', 'Awaiting payment'), ('PAID', 'Paid'), ('DELIVERED', 'Delivered'), ('CANCELLED', 'Cancelled')], default='RECEIVED', max_length=255)),
                ('message', models.TextField(default='')),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('tax', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('total', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('finance_invoice', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orders', to='costasiella.financeinvoice')),
            ],
        ),
        migrations.CreateModel(
            name='FinancePaymentBatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('batch_type', models.CharField(choices=[('COLLECTION', 'Collection'), ('PAYMENT', 'Payment')], max_length=255)),
                ('status', models.CharField(choices=[('SENT_TO_BANK', 'Sent to Bank'), ('APPROVED', 'Approved'), ('AWAITING_APPROVAL', 'Awaiting approval'), ('REJECTED', 'Rejected')], default='AWAITING_APPROVAL', max_length=255)),
                ('description', models.CharField(default='', max_length=255)),
                ('year', models.IntegerField(null=True)),
                ('month', models.IntegerField(null=True)),
                ('execution_date', models.DateField()),
                ('include_zero_amounts', models.BooleanField(default=False)),
                ('note', models.TextField(default='')),
                ('total', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('count_items', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='FinancePaymentBatchCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255)),
                ('batch_category_type', models.CharField(choices=[('COLLECTION', 'Collection'), ('PAYMENT', 'Payment')], max_length=255)),
                ('description', models.CharField(default='', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='FinancePaymentMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('system_method', models.BooleanField(default=False, editable=False)),
                ('name', models.CharField(max_length=255)),
                ('code', models.CharField(default='', help_text='Payment method/condition code in your accounting software.', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='FinanceTaxRate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255)),
                ('percentage', models.DecimalField(decimal_places=2, max_digits=20)),
                ('rate_type', models.CharField(choices=[('IN', 'Inclusive'), ('EX', 'Exclusive')], default='IN', max_length=2)),
                ('code', models.CharField(default='', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255)),
                ('address', models.TextField(default='')),
                ('phone', models.CharField(default='', max_length=255)),
                ('email', models.EmailField(default='', max_length=254)),
                ('registration', models.CharField(default='', max_length=255)),
                ('tax_registration', models.CharField(default='', max_length=255)),
                ('logo_login', sorl.thumbnail.fields.ImageField(default=None, upload_to='organization')),
                ('logo_invoice', sorl.thumbnail.fields.ImageField(default=None, upload_to='organization')),
                ('logo_email', sorl.thumbnail.fields.ImageField(default=None, upload_to='organization')),
                ('logo_shop_header', sorl.thumbnail.fields.ImageField(default=None, upload_to='organization')),
                ('logo_self_checkin', sorl.thumbnail.fields.ImageField(default=None, upload_to='organization')),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationAnnouncement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('display_public', models.BooleanField(default=False)),
                ('display_shop', models.BooleanField(default=False)),
                ('display_backend', models.BooleanField(default=False)),
                ('title', costasiella.modules.encrypted_fields.EncryptedTextField(default='')),
                ('content', costasiella.modules.encrypted_fields.EncryptedTextField(default='')),
                ('date_start', models.DateField()),
                ('date_end', models.DateField()),
                ('priority', models.IntegerField(default=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationAppointmentCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('display_public', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationClasspass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('display_public', models.BooleanField(default=True)),
                ('display_shop', models.BooleanField(default=True)),
                ('trial_pass', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=20)),
                ('validity', models.PositiveIntegerField()),
                ('validity_unit', models.CharField(choices=[('DAYS', 'Days'), ('WEEKS', 'Weeks'), ('MONTHS', 'Months')], default='DAYS', max_length=10)),
                ('classes', models.PositiveSmallIntegerField()),
                ('unlimited', models.BooleanField(default=False)),
                ('quick_stats_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('finance_costcenter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='costasiella.financecostcenter')),
                ('finance_glaccount', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='costasiella.financeglaccount')),
                ('finance_tax_rate', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='costasiella.financetaxrate')),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationClasspassGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(default='')),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationClasstype',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('display_public', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('url_website', models.URLField()),
                ('image', sorl.thumbnail.fields.ImageField(default=None, upload_to='organization_classtype')),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationDiscovery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationHoliday',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('date_start', models.DateField()),
                ('date_end', models.DateField()),
                ('classes', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationLanguage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('display_public', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationLocationRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('display_public', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255)),
                ('organization_location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rooms', to='costasiella.organizationlocation')),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationMembership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('display_public', models.BooleanField(default=True)),
                ('display_shop', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=20)),
                ('validity', models.PositiveIntegerField()),
                ('validity_unit', models.CharField(choices=[('DAYS', 'Days'), ('WEEKS', 'Weeks'), ('MONTHS', 'Months')], default='DAYS', max_length=10)),
                ('terms_and_conditions', models.TextField()),
                ('finance_costcenter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='costasiella.financecostcenter')),
                ('finance_glaccount', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='costasiella.financeglaccount')),
                ('finance_tax_rate', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='costasiella.financetaxrate')),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationShift',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('display_public', models.BooleanField(default=True)),
                ('display_shop', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('sort_order', models.PositiveIntegerField(default=0)),
                ('min_duration', models.PositiveIntegerField()),
                ('classes', models.PositiveIntegerField()),
                ('subscription_unit', models.CharField(choices=[('WEEK', 'Week'), ('MONTH', 'Month')], default='WEEK', max_length=10)),
                ('reconciliation_classes', models.PositiveSmallIntegerField(default=0)),
                ('credit_accumulation_days', models.PositiveIntegerField(default=31)),
                ('unlimited', models.BooleanField(default=False)),
                ('terms_and_conditions', models.TextField()),
                ('registration_fee', models.DecimalField(decimal_places=2, max_digits=20)),
                ('quick_stats_amount', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('finance_costcenter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='costasiella.financecostcenter')),
                ('finance_glaccount', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='costasiella.financeglaccount')),
                ('organization_membership', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='costasiella.organizationmembership')),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationSubscriptionGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(default='')),
            ],
        ),
        migrations.CreateModel(
            name='ScheduleEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('display_public', models.BooleanField(default=False)),
                ('display_shop', models.BooleanField(default=False)),
                ('auto_send_info_mail', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255)),
                ('tagline', models.CharField(default='', max_length=255)),
                ('preview', models.TextField(default='')),
                ('description', models.TextField(default='')),
                ('date_start', models.DateField(null=True)),
                ('date_end', models.DateField(default=None, null=True)),
                ('time_start', models.TimeField(null=True)),
                ('time_end', models.TimeField(null=True)),
                ('info_mail_content', models.TextField(default='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('instructor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('instructor_2', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='instructor_2', to=settings.AUTH_USER_MODEL)),
                ('organization_level', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='costasiella.organizationlevel')),
                ('organization_location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.organizationlocation')),
            ],
        ),
        migrations.CreateModel(
            name='ScheduleEventTicket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_event', models.BooleanField(default=False)),
                ('deletable', models.BooleanField(default=True)),
                ('display_public', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(default='')),
                ('price', models.DecimalField(decimal_places=2, max_digits=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('finance_costcenter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='costasiella.financecostcenter')),
                ('finance_glaccount', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='costasiella.financeglaccount')),
                ('finance_tax_rate', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='costasiella.financetaxrate')),
                ('schedule_event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tickets', to='costasiella.scheduleevent')),
            ],
        ),
        migrations.CreateModel(
            name='ScheduleItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('schedule_item_type', models.CharField(choices=[('CLASS', 'Class'), ('EVENT_ACTIVITY', 'Event Activity'), ('APPOINTMENT', 'Appointment'), ('SHIFT', 'Shift')], max_length=50)),
                ('frequency_type', models.CharField(choices=[('SPECIFIC', 'Specific'), ('WEEKLY', 'Weekly')], max_length=50)),
                ('frequency_interval', models.PositiveSmallIntegerField(choices=[(0, 'Interval unused'), (1, 'Monday'), (2, 'Tuesday'), (3, 'Wednesday'), (4, 'Thursday'), (5, 'Friday'), (6, 'Saturday'), (7, 'Sunday')])),
                ('name', models.CharField(max_length=255, null=True)),
                ('spaces', models.IntegerField(default=0, help_text='Total spaces for this class.', null=True)),
                ('walk_in_spaces', models.IntegerField(default=0, help_text="Number of walk-in spaces (Can't be booked online).", null=True)),
                ('date_start', models.DateField()),
                ('date_end', models.DateField(default=None, null=True)),
                ('time_start', models.TimeField()),
                ('time_end', models.TimeField()),
                ('display_public', models.BooleanField(default=False)),
                ('info_mail_content', models.TextField(default='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[['', 'Regular'], ['CANCELLED', 'Cancelled'], ['OPEN', 'No instructor']], default='', max_length=255)),
                ('role', models.CharField(choices=[['', 'Regular'], ['SUB', 'Substitute'], ['ASSISTANT', 'Assistant'], ['KARMA', 'Karma']], default='', max_length=50)),
                ('role_2', models.CharField(choices=[['', 'Regular'], ['SUB', 'Substitute'], ['ASSISTANT', 'Assistant'], ['KARMA', 'Karma']], default='', max_length=50)),
                ('description', models.CharField(default='', max_length=255)),
                ('count_attendance', models.IntegerField(null=True)),
                ('organization_holiday_id', models.IntegerField(null=True)),
                ('organization_holiday_name', models.CharField(default='', max_length=255)),
                ('account', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='si_account', to=settings.AUTH_USER_MODEL)),
                ('account_2', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='si_account_2', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': [('view_scheduleclass', 'Can view schedule class'), ('add_scheduleclass', 'Can add schedule class'), ('change_scheduleclass', 'Can change schedule class'), ('delete_scheduleclass', 'Can delete schedule class'), ('view_scheduleshift', 'Can view schedule shift'), ('add_scheduleshift', 'Can add schedule shift'), ('change_scheduleshift', 'Can change schedule shift'), ('delete_scheduleshift', 'Can delete schedule shift'), ('view_scheduleappointment', 'Can view schedule appointment'), ('add_scheduleappointment', 'Can add schedule appointment'), ('change_scheduleappointment', 'Can change schedule appointment'), ('delete_scheduleappointment', 'Can delete schedule appointment')],
            },
        ),
        migrations.CreateModel(
            name='SystemFeatureShop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('memberships', models.BooleanField(default=False)),
                ('subscriptions', models.BooleanField(default=False)),
                ('classpasses', models.BooleanField(default=False)),
                ('classes', models.BooleanField(default=False)),
                ('events', models.BooleanField(default=False)),
                ('account_data_download', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='SystemMailTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(editable=False, max_length=255)),
                ('subject', models.TextField()),
                ('title', models.TextField()),
                ('description', models.TextField(null=True)),
                ('content', models.TextField()),
                ('comments', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SystemSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('setting', models.CharField(max_length=255)),
                ('value', costasiella.modules.encrypted_fields.EncryptedTextField(default='')),
            ],
        ),
        migrations.CreateModel(
            name='AccountInstructorProfile',
            fields=[
                ('account', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='costasiella.account')),
                ('classes', models.BooleanField(default=True)),
                ('appointments', models.BooleanField(default=False)),
                ('events', models.BooleanField(default=False)),
                ('role', costasiella.modules.encrypted_fields.EncryptedTextField(default='')),
                ('education', costasiella.modules.encrypted_fields.EncryptedTextField(default='')),
                ('bio', costasiella.modules.encrypted_fields.EncryptedTextField(default='')),
                ('url_bio', costasiella.modules.encrypted_fields.EncryptedTextField(default='')),
                ('url_website', costasiella.modules.encrypted_fields.EncryptedTextField(default='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ScheduleItemWeeklyOTC',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('status', models.CharField(choices=[['', 'Regular'], ['CANCELLED', 'Cancelled'], ['OPEN', 'No instructor']], default='', max_length=255)),
                ('description', models.CharField(default='', max_length=255)),
                ('role', models.CharField(choices=[['', 'Regular'], ['SUB', 'Substitute'], ['ASSISTANT', 'Assistant'], ['KARMA', 'Karma']], default='', max_length=50)),
                ('role_2', models.CharField(choices=[['', 'Regular'], ['SUB', 'Substitute'], ['ASSISTANT', 'Assistant'], ['KARMA', 'Karma']], default='', max_length=50)),
                ('time_start', models.TimeField(null=True)),
                ('time_end', models.TimeField(null=True)),
                ('spaces', models.IntegerField(default=0, help_text='Total spaces for this class.', null=True)),
                ('walk_in_spaces', models.IntegerField(default=0, help_text="Number of walk-in spaces (Can't be booked online).", null=True)),
                ('info_mail_content', models.TextField(default='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='otc_account', to=settings.AUTH_USER_MODEL)),
                ('account_2', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='otc_account_2', to=settings.AUTH_USER_MODEL)),
                ('organization_classtype', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='costasiella.organizationclasstype')),
                ('organization_level', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='costasiella.organizationlevel')),
                ('organization_location_room', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='costasiella.organizationlocationroom')),
                ('organization_shift', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='costasiella.organizationshift')),
                ('schedule_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.scheduleitem')),
            ],
        ),
        migrations.CreateModel(
            name='ScheduleItemPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_start', models.DateField()),
                ('date_end', models.DateField(default=None, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('organization_classpass_dropin', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='organizationclasspassesdropin', to='costasiella.organizationclasspass')),
                ('organization_classpass_trial', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='organizationclasspassestrial', to='costasiella.organizationclasspass')),
                ('schedule_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.scheduleitem')),
            ],
        ),
        migrations.CreateModel(
            name='ScheduleItemOrganizationSubscriptionGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enroll', models.BooleanField(default=False)),
                ('shop_book', models.BooleanField(default=False)),
                ('attend', models.BooleanField(default=False)),
                ('organization_subscription_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.organizationsubscriptiongroup')),
                ('schedule_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.scheduleitem')),
            ],
        ),
        migrations.CreateModel(
            name='ScheduleItemOrganizationClasspassGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shop_book', models.BooleanField(default=False)),
                ('attend', models.BooleanField(default=False)),
                ('organization_classpass_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.organizationclasspassgroup')),
                ('schedule_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.scheduleitem')),
            ],
        ),
        migrations.CreateModel(
            name='ScheduleItemInstructorAvailable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_start', models.DateField()),
                ('date_end', models.DateField(default=None, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('schedule_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.scheduleitem')),
            ],
        ),
        migrations.CreateModel(
            name='ScheduleItemEnrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_start', models.DateField()),
                ('date_end', models.DateField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account_subscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='costasiella.accountsubscription')),
                ('schedule_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='costasiella.scheduleitem')),
            ],
        ),
        migrations.CreateModel(
            name='ScheduleItemAttendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attendance_type', models.CharField(choices=[['CLASSPASS', 'Classpass'], ['SUBSCRIPTION', 'Subscription'], ['COMPLEMENTARY', 'Complementary'], ['REVIEW', 'To be reviewed'], ['RECONCILE_LATER', 'Reconcile later'], ['SCHEDULE_EVENT_TICKET', 'Schedule event ticket']], max_length=255)),
                ('date', models.DateField()),
                ('online_booking', models.BooleanField(default=False)),
                ('booking_status', models.CharField(choices=[['BOOKED', 'Booked'], ['ATTENDING', 'Attending'], ['CANCELLED', 'Cancelled']], max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('account_classpass', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='classes', to='costasiella.accountclasspass')),
                ('account_schedule_event_ticket', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='costasiella.accountscheduleeventticket')),
                ('account_subscription', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='costasiella.accountsubscription')),
                ('finance_invoice_item', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='costasiella.financeinvoiceitem')),
                ('schedule_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendances', to='costasiella.scheduleitem')),
            ],
        ),
        migrations.CreateModel(
            name='ScheduleItemAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[['', 'Regular'], ['SUB', 'Substitute'], ['ASSISTANT', 'Assistant'], ['KARMA', 'Karma']], default='', max_length=50)),
                ('role_2', models.CharField(choices=[['', 'Regular'], ['SUB', 'Substitute'], ['ASSISTANT', 'Assistant'], ['KARMA', 'Karma']], default='', max_length=50)),
                ('date_start', models.DateField()),
                ('date_end', models.DateField(default=None, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('account_2', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='account_2', to=settings.AUTH_USER_MODEL)),
                ('schedule_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='instructors', to='costasiella.scheduleitem')),
            ],
        ),
        migrations.AddField(
            model_name='scheduleitem',
            name='organization_classpass_groups',
            field=models.ManyToManyField(related_name='classpass_groups', through='costasiella.ScheduleItemOrganizationClasspassGroup', to='costasiella.OrganizationClasspassGroup'),
        ),
        migrations.AddField(
            model_name='scheduleitem',
            name='organization_classtype',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='costasiella.organizationclasstype'),
        ),
        migrations.AddField(
            model_name='scheduleitem',
            name='organization_level',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='costasiella.organizationlevel'),
        ),
        migrations.AddField(
            model_name='scheduleitem',
            name='organization_location_room',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.organizationlocationroom'),
        ),
        migrations.AddField(
            model_name='scheduleitem',
            name='organization_shift',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='costasiella.organizationshift'),
        ),
        migrations.AddField(
            model_name='scheduleitem',
            name='organization_subscription_groups',
            field=models.ManyToManyField(related_name='subscription_groups', through='costasiella.ScheduleItemOrganizationSubscriptionGroup', to='costasiella.OrganizationSubscriptionGroup'),
        ),
        migrations.AddField(
            model_name='scheduleitem',
            name='schedule_event',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='schedule_items', to='costasiella.scheduleevent'),
        ),
        migrations.CreateModel(
            name='ScheduleEventTicketScheduleItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('included', models.BooleanField(default=False)),
                ('schedule_event_ticket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ticket_schedule_items', to='costasiella.scheduleeventticket')),
                ('schedule_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.scheduleitem')),
            ],
        ),
        migrations.AddField(
            model_name='scheduleeventticket',
            name='schedule_items',
            field=models.ManyToManyField(related_name='schedule_items', through='costasiella.ScheduleEventTicketScheduleItem', to='costasiella.ScheduleItem'),
        ),
        migrations.CreateModel(
            name='ScheduleEventMedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.PositiveIntegerField(default=0)),
                ('description', models.CharField(max_length=255)),
                ('image', sorl.thumbnail.fields.ImageField(default=None, upload_to='schedule_event_media')),
                ('schedule_event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='media', to='costasiella.scheduleevent')),
            ],
        ),
        migrations.CreateModel(
            name='ScheduleEventEarlybird',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_start', models.DateField()),
                ('date_end', models.DateField()),
                ('discount_percentage', models.DecimalField(decimal_places=2, max_digits=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('schedule_event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='earlybirds', to='costasiella.scheduleevent')),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationSubscriptionPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=20)),
                ('date_start', models.DateField()),
                ('date_end', models.DateField(null=True)),
                ('finance_tax_rate', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='costasiella.financetaxrate')),
                ('organization_subscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.organizationsubscription')),
            ],
            options={
                'ordering': ['-date_start'],
            },
        ),
        migrations.CreateModel(
            name='OrganizationSubscriptionGroupSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organization_subscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.organizationsubscription')),
                ('organization_subscription_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.organizationsubscriptiongroup')),
            ],
        ),
        migrations.AddField(
            model_name='organizationsubscriptiongroup',
            name='organization_subscriptions',
            field=models.ManyToManyField(related_name='subscriptions', through='costasiella.OrganizationSubscriptionGroupSubscription', to='costasiella.OrganizationSubscription'),
        ),
        migrations.CreateModel(
            name='OrganizationHolidayLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organization_holiday', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.organizationholiday')),
                ('organization_location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.organizationlocation')),
            ],
        ),
        migrations.AddField(
            model_name='organizationholiday',
            name='organization_locations',
            field=models.ManyToManyField(related_name='holidays', through='costasiella.OrganizationHolidayLocation', to='costasiella.OrganizationLocation'),
        ),
        migrations.CreateModel(
            name='OrganizationDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[['TERMS_AND_CONDITIONS', 'Terms and conditions'], ['PRIVACY_POLICY', 'Privacy policy']], max_length=50)),
                ('version', models.CharField(default='', max_length=50)),
                ('date_start', models.DateField()),
                ('date_end', models.DateField(null=True)),
                ('document', models.FileField(default=None, upload_to='organization_document')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.organization')),
            ],
            options={
                'ordering': ['-date_start'],
            },
        ),
        migrations.CreateModel(
            name='OrganizationClasspassGroupClasspass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organization_classpass', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.organizationclasspass')),
                ('organization_classpass_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.organizationclasspassgroup')),
            ],
        ),
        migrations.AddField(
            model_name='organizationclasspassgroup',
            name='organization_classpasses',
            field=models.ManyToManyField(related_name='classpasses', through='costasiella.OrganizationClasspassGroupClasspass', to='costasiella.OrganizationClasspass'),
        ),
        migrations.AddField(
            model_name='organizationclasspass',
            name='organization_membership',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='costasiella.organizationmembership'),
        ),
        migrations.CreateModel(
            name='OrganizationAppointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('display_public', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255)),
                ('finance_costcenter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='costasiella.financecostcenter')),
                ('finance_glaccount', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='costasiella.financeglaccount')),
                ('organization_appointment_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.organizationappointmentcategory')),
            ],
        ),
        migrations.CreateModel(
            name='IntegrationLogMollie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('log_source', models.CharField(choices=[('ORDER_PAY', 'Order pay'), ('INVOICE_PAY', 'Invoice pay'), ('WEBHOOK', 'Webhook')], max_length=255)),
                ('mollie_payment_id', models.CharField(max_length=255)),
                ('recurring_type', models.CharField(choices=[('FIRST', 'First'), ('RECURRING', 'Recurring')], max_length=255, null=True)),
                ('webhook_url', models.TextField(null=True)),
                ('payment_data', models.TextField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('finance_invoice', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='costasiella.financeinvoice')),
                ('finance_order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='costasiella.financeorder')),
            ],
        ),
        migrations.CreateModel(
            name='FinancePaymentBatchItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_holder', costasiella.modules.encrypted_fields.EncryptedTextField(default='')),
                ('account_number', costasiella.modules.encrypted_fields.EncryptedTextField(default='')),
                ('account_bic', costasiella.modules.encrypted_fields.EncryptedTextField(default='')),
                ('mandate_signature_date', models.DateField(null=True)),
                ('mandate_reference', costasiella.modules.encrypted_fields.EncryptedTextField(default='')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=20)),
                ('currency', models.CharField(default='', max_length=255)),
                ('description', costasiella.modules.encrypted_fields.EncryptedTextField(default='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('account', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payment_batch_items', to=settings.AUTH_USER_MODEL)),
                ('finance_invoice', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='costasiella.financeinvoice')),
                ('finance_payment_batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='costasiella.financepaymentbatch')),
            ],
        ),
        migrations.CreateModel(
            name='FinancePaymentBatchExport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('account', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payment_batch_exports', to=settings.AUTH_USER_MODEL)),
                ('finance_payment_batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exports', to='costasiella.financepaymentbatch')),
            ],
        ),
        migrations.AddField(
            model_name='financepaymentbatch',
            name='finance_payment_batch_category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='costasiella.financepaymentbatchcategory'),
        ),
        migrations.CreateModel(
            name='FinanceOrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attendance_type', models.CharField(choices=[['CLASSPASS', 'Classpass'], ['SUBSCRIPTION', 'Subscription'], ['COMPLEMENTARY', 'Complementary'], ['REVIEW', 'To be reviewed'], ['RECONCILE_LATER', 'Reconcile later'], ['SCHEDULE_EVENT_TICKET', 'Schedule event ticket']], max_length=255, null=True)),
                ('attendance_date', models.DateField(null=True)),
                ('product_name', models.CharField(max_length=255)),
                ('description', models.TextField(default='')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=20)),
                ('price', models.DecimalField(decimal_places=2, max_digits=20)),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('tax', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('total', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('finance_costcenter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='costasiella.financecostcenter')),
                ('finance_glaccount', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='costasiella.financeglaccount')),
                ('finance_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='costasiella.financeorder')),
                ('finance_tax_rate', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='costasiella.financetaxrate')),
                ('organization_classpass', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='costasiella.organizationclasspass')),
                ('organization_subscription', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='costasiella.organizationsubscription')),
                ('schedule_event_ticket', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='costasiella.scheduleeventticket')),
                ('schedule_item', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='costasiella.scheduleitem')),
            ],
        ),
        migrations.CreateModel(
            name='FinanceInvoicePayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=20)),
                ('note', models.TextField(default='')),
                ('online_payment_id', models.TextField(null=True)),
                ('online_refund_id', models.TextField(null=True)),
                ('online_chargeback_id', models.TextField(null=True)),
                ('finance_invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='costasiella.financeinvoice')),
                ('finance_payment_method', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='costasiella.financepaymentmethod')),
            ],
        ),
        migrations.AddField(
            model_name='financeinvoiceitem',
            name='finance_tax_rate',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='invoice_items', to='costasiella.financetaxrate'),
        ),
        migrations.CreateModel(
            name='FinanceInvoiceGroupDefault',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_type', models.CharField(default='', max_length=255)),
                ('finance_invoice_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.financeinvoicegroup')),
            ],
        ),
        migrations.AddField(
            model_name='financeinvoice',
            name='finance_invoice_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.financeinvoicegroup'),
        ),
        migrations.AddField(
            model_name='financeinvoice',
            name='finance_payment_method',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='costasiella.financepaymentmethod'),
        ),
        migrations.CreateModel(
            name='AccountSubscriptionPause',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_start', models.DateField()),
                ('date_end', models.DateField()),
                ('description', models.TextField(default='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account_subscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pauses', to='costasiella.accountsubscription')),
            ],
        ),
        migrations.CreateModel(
            name='AccountSubscriptionCredit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mutation_type', models.CharField(choices=[('ADD', 'Add'), ('SUB', 'Subtract')], default='ADD', max_length=255)),
                ('mutation_amount', models.DecimalField(decimal_places=1, max_digits=20)),
                ('description', models.TextField(default='')),
                ('subscription_year', models.IntegerField(null=True)),
                ('subscription_month', models.IntegerField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account_subscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='credits', to='costasiella.accountsubscription')),
                ('schedule_item_attendance', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='costasiella.scheduleitemattendance')),
            ],
        ),
        migrations.CreateModel(
            name='AccountSubscriptionBlock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_start', models.DateField()),
                ('date_end', models.DateField()),
                ('description', models.TextField(default='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account_subscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blocks', to='costasiella.accountsubscription')),
            ],
        ),
        migrations.CreateModel(
            name='AccountSubscriptionAltPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subscription_year', models.IntegerField(null=True)),
                ('subscription_month', models.IntegerField(null=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=20)),
                ('description', models.TextField(default='')),
                ('note', models.TextField(default='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account_subscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alt_prices', to='costasiella.accountsubscription')),
            ],
        ),
        migrations.AddField(
            model_name='accountsubscription',
            name='finance_payment_method',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='costasiella.financepaymentmethod'),
        ),
        migrations.AddField(
            model_name='accountsubscription',
            name='organization_subscription',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.organizationsubscription'),
        ),
        migrations.AddField(
            model_name='accountscheduleeventticket',
            name='schedule_event_ticket',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accounts', to='costasiella.scheduleeventticket'),
        ),
        migrations.CreateModel(
            name='AccountNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note_type', models.CharField(choices=[('BACKOFFICE', 'Backoffice'), ('INSTRUCTORS', 'Instructors')], max_length=255)),
                ('note', costasiella.modules.encrypted_fields.EncryptedTextField(default='')),
                ('injury', models.BooleanField(default=False)),
                ('processed', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to=settings.AUTH_USER_MODEL)),
                ('note_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes_made', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': [('view_accountnoteinstructors', 'Can view instructor notes'), ('view_accountnotebackoffice', 'Can view backoffice notes')],
            },
        ),
        migrations.AddField(
            model_name='accountmembership',
            name='finance_payment_method',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='costasiella.financepaymentmethod'),
        ),
        migrations.AddField(
            model_name='accountmembership',
            name='organization_membership',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.organizationmembership'),
        ),
        migrations.CreateModel(
            name='AccountFinancePaymentBatchCategoryItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
                ('month', models.IntegerField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=20)),
                ('description', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payment_batch_category_items', to=settings.AUTH_USER_MODEL)),
                ('finance_payment_batch_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.financepaymentbatchcategory')),
            ],
        ),
        migrations.CreateModel(
            name='AccountDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(default='', max_length=255)),
                ('document', models.FileField(default=None, upload_to='account_document')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='accountclasspass',
            name='organization_classpass',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.organizationclasspass'),
        ),
        migrations.CreateModel(
            name='AccountBankAccountMandate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', costasiella.modules.encrypted_fields.EncryptedTextField(default='')),
                ('content', costasiella.modules.encrypted_fields.EncryptedTextField(default='')),
                ('signature_date', models.DateField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account_bank_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mandates', to='costasiella.accountbankaccount')),
            ],
        ),
        migrations.CreateModel(
            name='AccountAcceptedDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_accepted', models.DateTimeField(auto_now_add=True)),
                ('client_ip', costasiella.modules.encrypted_fields.EncryptedTextField(default='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accepted_documents', to=settings.AUTH_USER_MODEL)),
                ('document', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='costasiella.organizationdocument')),
            ],
        ),
        migrations.AddField(
            model_name='account',
            name='organization_discovery',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='accounts', to='costasiella.organizationdiscovery'),
        ),
        migrations.AddField(
            model_name='account',
            name='organization_language',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='accounts', to='costasiella.organizationlanguage'),
        ),
        migrations.AddField(
            model_name='account',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.CreateModel(
            name='OrganizationAppointmentPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=20)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('finance_tax_rate', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='costasiella.financetaxrate')),
                ('organization_appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.organizationappointment')),
            ],
            options={
                'unique_together': {('account', 'organization_appointment')},
            },
        ),
    ]
