# Generated by Django 2.2.8 on 2020-03-07 22:21

import costasiella.modules.encrypted_fields
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import sorl.thumbnail.fields


class Migration(migrations.Migration):

    replaces = [('costasiella', '0001_initial'), ('costasiella', '0002_auto_20190722_0949'), ('costasiella', '0003_auto_20190723_1702'), ('costasiella', '0004_auto_20190724_1412'), ('costasiella', '0005_auto_20190724_1523'), ('costasiella', '0006_financeinvoice'), ('costasiella', '0007_financeinvoiceamount'), ('costasiella', '0008_auto_20190726_0909'), ('costasiella', '0009_auto_20190726_0915'), ('costasiella', '0010_auto_20190726_1002'), ('costasiella', '0011_financeinvoiceaccount'), ('costasiella', '0012_financeinvoice_accounts'), ('costasiella', '0013_auto_20190726_1013'), ('costasiella', '0014_financeinvoicegroupdefault'), ('costasiella', '0015_financeinvoiceitem'), ('costasiella', '0016_auto_20190731_1840'), ('costasiella', '0017_auto_20190801_0854'), ('costasiella', '0018_auto_20190802_0728'), ('costasiella', '0019_financeinvoiceitem_account_classpass'), ('costasiella', '0020_auto_20190802_0903'), ('costasiella', '0021_auto_20190802_0930'), ('costasiella', '0022_auto_20190802_1115'), ('costasiella', '0023_auto_20190802_1117'), ('costasiella', '0024_organization'), ('costasiella', '0025_auto_20190807_0910'), ('costasiella', '0026_auto_20190814_0857'), ('costasiella', '0027_scheduleitem_organization_appointment'), ('costasiella', '0028_remove_scheduleitem_organization_appointment'), ('costasiella', '0029_scheduleitemteacheravailable'), ('costasiella', '0030_scheduleitemattendance'), ('costasiella', '0031_accountclasspass_classes_remaining'), ('costasiella', '0032_appsetting'), ('costasiella', '0033_auto_20190823_1458'), ('costasiella', '0034_auto_20190825_1154'), ('costasiella', '0035_auto_20190825_1605'), ('costasiella', '0036_scheduleitemweeklyotc'), ('costasiella', '0037_auto_20190826_1243'), ('costasiella', '0038_remove_scheduleitemweeklyotc_display_public'), ('costasiella', '0039_scheduleitemweeklyotc_description'), ('costasiella', '0040_auto_20190828_0751'), ('costasiella', '0041_auto_20190828_0819'), ('costasiella', '0042_auto_20190828_0825'), ('costasiella', '0043_auto_20190828_0832'), ('costasiella', '0044_scheduleitemweeklyotc_status'), ('costasiella', '0045_auto_20190905_0758'), ('costasiella', '0046_auto_20190905_0805'), ('costasiella', '0047_organizationdocument'), ('costasiella', '0048_organizationdocument_version'), ('costasiella', '0049_accountaccepteddocument'), ('costasiella', '0050_auto_20190929_1432'), ('costasiella', '0051_organizationclasspass_trial_pass'), ('costasiella', '0052_organizationclasspass_trial_times'), ('costasiella', '0053_auto_20191109_1655'), ('costasiella', '0054_scheduleitemprice'), ('costasiella', '0055_financeinvoicepayment'), ('costasiella', '0056_remove_financeinvoicepayment_finance_tax_rate'), ('costasiella', '0057_auto_20200103_1910'), ('costasiella', '0058_auto_20200103_2056'), ('costasiella', '0059_auto_20200214_2204'), ('costasiella', '0060_auto_20200215_1124'), ('costasiella', '0061_auto_20200222_1110'), ('costasiella', '0062_auto_20200223_1142'), ('costasiella', '0063_auto_20200223_1150'), ('costasiella', '0064_auto_20200227_1938')]

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('customer', models.BooleanField(default=True)),
                ('teacher', models.BooleanField(default=False)),
                ('employee', models.BooleanField(default=False)),
                ('full_name', models.CharField(default='', editable=False, max_length=255)),
                ('gender', costasiella.modules.encrypted_fields.EncryptedTextField(default='')),
                ('date_of_birth', costasiella.modules.encrypted_fields.EncryptedTextField(default='')),
                ('address', costasiella.modules.encrypted_fields.EncryptedTextField(default='')),
                ('postcode', costasiella.modules.encrypted_fields.EncryptedTextField(default='')),
                ('city', costasiella.modules.encrypted_fields.EncryptedTextField(default='')),
                ('country', costasiella.modules.encrypted_fields.EncryptedTextField(default='')),
                ('phone', costasiella.modules.encrypted_fields.EncryptedTextField(default='')),
                ('mobile', costasiella.modules.encrypted_fields.EncryptedTextField(default='')),
                ('emergency', costasiella.modules.encrypted_fields.EncryptedTextField(default='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
                'permissions': [('view_insight', 'Can view insight menu'), ('view_insightclasspassesactive', 'Can view insight classpasses active'), ('view_insightclasspassessold', 'Can view insight classpasses sold'), ('view_insightsubscriptionsactive', 'Can view insight subscriptions active'), ('view_insightsubscriptionssold', 'Can view insight subscriptions sold')],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='FinanceCostCenter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255)),
                ('code', models.CharField(default='', help_text='Cost center code in your accounting software.', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='FinanceGLAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255)),
                ('code', models.CharField(default='', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='FinancePaymentMethod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('system_method', models.BooleanField(default=False, editable=False)),
                ('name', models.CharField(max_length=255)),
                ('code', models.CharField(default='', help_text='Payment method/condition code in your accounting software.', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='FinanceTaxRate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255)),
                ('percentage', models.DecimalField(decimal_places=2, max_digits=20)),
                ('rate_type', models.CharField(choices=[('IN', 'Inclusive'), ('EX', 'Exclusive')], default='IN', max_length=2)),
                ('code', models.CharField(default='', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationAppointmentCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('display_public', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationClasspass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('display_public', models.BooleanField(default=True)),
                ('display_shop', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.CharField(max_length=255)),
                ('price', models.DecimalField(decimal_places=2, max_digits=20)),
                ('validity', models.PositiveIntegerField()),
                ('validity_unit', models.CharField(choices=[('DAYS', 'Days'), ('WEEKS', 'Weeks'), ('MONTHS', 'Months')], default='DAYS', max_length=10)),
                ('classes', models.PositiveSmallIntegerField()),
                ('unlimited', models.BooleanField(default=False)),
                ('quick_stats_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('finance_costcenter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='costasiella.FinanceCostCenter')),
                ('finance_glaccount', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='costasiella.FinanceGLAccount')),
                ('finance_tax_rate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.FinanceTaxRate')),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationClasspassGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationClasstype',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('display_public', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('url_website', models.URLField()),
                ('image', sorl.thumbnail.fields.ImageField(default=None, upload_to='organization_classtype_images')),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationDiscovery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('display_public', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationLocationRoom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('display_public', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255)),
                ('organization_location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.OrganizationLocation')),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationMembership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('display_public', models.BooleanField(default=True)),
                ('display_shop', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.CharField(max_length=255)),
                ('price', models.DecimalField(decimal_places=2, max_digits=20)),
                ('validity', models.PositiveIntegerField()),
                ('validity_unit', models.CharField(choices=[('DAYS', 'Days'), ('WEEKS', 'Weeks'), ('MONTHS', 'Months')], default='DAYS', max_length=10)),
                ('terms_and_conditions', models.TextField()),
                ('finance_costcenter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='costasiella.FinanceCostCenter')),
                ('finance_glaccount', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='costasiella.FinanceGLAccount')),
                ('finance_tax_rate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.FinanceTaxRate')),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationSubscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('display_public', models.BooleanField(default=True)),
                ('display_shop', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.CharField(max_length=255)),
                ('sort_order', models.PositiveIntegerField(default=0)),
                ('min_duration', models.PositiveIntegerField()),
                ('classes', models.PositiveIntegerField()),
                ('subscription_unit', models.CharField(choices=[('WEEK', 'Week'), ('MONTH', 'Month')], default='DAYS', max_length=10)),
                ('reconciliation_classes', models.PositiveSmallIntegerField(default=0)),
                ('credit_validity', models.PositiveIntegerField(default=1)),
                ('unlimited', models.BooleanField(default=False)),
                ('terms_and_conditions', models.TextField()),
                ('registration_fee', models.DecimalField(decimal_places=2, max_digits=20)),
                ('quick_stats_amount', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('finance_costcenter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='costasiella.FinanceCostCenter')),
                ('finance_glaccount', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='costasiella.FinanceGLAccount')),
                ('organization_membership', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='costasiella.OrganizationMembership')),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationSubscriptionGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='ScheduleItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('schedule_item_type', models.CharField(choices=[('CLASS', 'Class'), ('APPOINTMENT', 'Appointment')], max_length=50)),
                ('frequency_type', models.CharField(choices=[('SPECIFIC', 'Specific'), ('WEEKLY', 'Weekly')], max_length=50)),
                ('frequency_interval', models.PositiveSmallIntegerField(choices=[(0, 'Interval unused'), (1, 'Monday'), (2, 'Tuesday'), (3, 'Wednesday'), (4, 'Thursday'), (5, 'Friday'), (6, 'Saturday'), (7, 'Sunday'), (7, 'Sunday')])),
                ('date_start', models.DateField()),
                ('date_end', models.DateField(default=None, null=True)),
                ('time_start', models.TimeField()),
                ('time_end', models.TimeField()),
                ('display_public', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'permissions': [('view_scheduleclass', 'Can view schedule class'), ('add_scheduleclass', 'Can add schedule class'), ('change_scheduleclass', 'Can change schedule class'), ('delete_scheduleclass', 'Can delete schedule class')],
            },
        ),
        migrations.CreateModel(
            name='AccountTeacherProfile',
            fields=[
                ('account', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('classes', models.BooleanField(default=True)),
                ('appointments', models.BooleanField(default=False)),
                ('events', models.BooleanField(default=False)),
                ('role', costasiella.modules.encrypted_fields.EncryptedTextField(default='')),
                ('education', costasiella.modules.encrypted_fields.EncryptedTextField(default='')),
                ('bio', costasiella.modules.encrypted_fields.EncryptedTextField(default='')),
                ('url_bio', costasiella.modules.encrypted_fields.EncryptedTextField(default='')),
                ('url_website', costasiella.modules.encrypted_fields.EncryptedTextField(default='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ScheduleItemTeacher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[['', 'Regular'], ['SUB', 'Subteacher'], ['ASSISTANT', 'Assistant'], ['KARMA', 'Karma']], max_length=50)),
                ('role_2', models.CharField(choices=[['', 'Regular'], ['SUB', 'Subteacher'], ['ASSISTANT', 'Assistant'], ['KARMA', 'Karma']], default='', max_length=50)),
                ('date_start', models.DateField()),
                ('date_end', models.DateField(default=None, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('account_2', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='account_2', to=settings.AUTH_USER_MODEL)),
                ('schedule_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.ScheduleItem')),
            ],
        ),
        migrations.CreateModel(
            name='ScheduleItemOrganizationSubscriptionGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enroll', models.BooleanField(default=False)),
                ('shop_book', models.BooleanField(default=False)),
                ('attend', models.BooleanField(default=False)),
                ('organization_subscription_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.OrganizationSubscriptionGroup')),
                ('schedule_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.ScheduleItem')),
            ],
        ),
        migrations.CreateModel(
            name='ScheduleItemOrganizationClasspassGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shop_book', models.BooleanField(default=False)),
                ('attend', models.BooleanField(default=False)),
                ('organization_classpass_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.OrganizationClasspassGroup')),
                ('schedule_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.ScheduleItem')),
            ],
        ),
        migrations.AddField(
            model_name='scheduleitem',
            name='organization_classpass_groups',
            field=models.ManyToManyField(related_name='classpass_groups', through='costasiella.ScheduleItemOrganizationClasspassGroup', to='costasiella.OrganizationClasspassGroup'),
        ),
        migrations.AddField(
            model_name='scheduleitem',
            name='organization_classtype',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='costasiella.OrganizationClasstype'),
        ),
        migrations.AddField(
            model_name='scheduleitem',
            name='organization_level',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='costasiella.OrganizationLevel'),
        ),
        migrations.AddField(
            model_name='scheduleitem',
            name='organization_location_room',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.OrganizationLocationRoom'),
        ),
        migrations.AddField(
            model_name='scheduleitem',
            name='organization_subscription_groups',
            field=models.ManyToManyField(related_name='subscription_groups', through='costasiella.ScheduleItemOrganizationSubscriptionGroup', to='costasiella.OrganizationSubscriptionGroup'),
        ),
        migrations.CreateModel(
            name='OrganizationSubscriptionPrice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=20)),
                ('date_start', models.DateField()),
                ('date_end', models.DateField(null=True)),
                ('finance_tax_rate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.FinanceTaxRate')),
                ('organization_subscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.OrganizationSubscription')),
            ],
            options={
                'ordering': ['-date_start'],
            },
        ),
        migrations.CreateModel(
            name='OrganizationSubscriptionGroupSubscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organization_subscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.OrganizationSubscription')),
                ('organization_subscription_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.OrganizationSubscriptionGroup')),
            ],
        ),
        migrations.AddField(
            model_name='organizationsubscriptiongroup',
            name='organization_subscriptions',
            field=models.ManyToManyField(related_name='subscriptions', through='costasiella.OrganizationSubscriptionGroupSubscription', to='costasiella.OrganizationSubscription'),
        ),
        migrations.CreateModel(
            name='OrganizationClasspassGroupClasspass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organization_classpass', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.OrganizationClasspass')),
                ('organization_classpass_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.OrganizationClasspassGroup')),
            ],
        ),
        migrations.AddField(
            model_name='organizationclasspassgroup',
            name='organization_classpasses',
            field=models.ManyToManyField(related_name='classpasses', through='costasiella.OrganizationClasspassGroupClasspass', to='costasiella.OrganizationClasspass'),
        ),
        migrations.AddField(
            model_name='organizationclasspass',
            name='organization_membership',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='costasiella.OrganizationMembership'),
        ),
        migrations.CreateModel(
            name='AccountSubscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_start', models.DateField()),
                ('date_end', models.DateField(null=True)),
                ('note', models.TextField(default='')),
                ('registration_fee_paid', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('finance_payment_method', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='costasiella.FinancePaymentMethod')),
                ('organization_subscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.OrganizationSubscription')),
            ],
        ),
        migrations.CreateModel(
            name='AccountMembership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_start', models.DateField()),
                ('date_end', models.DateField(null=True)),
                ('note', models.TextField(default='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('finance_payment_method', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='costasiella.FinancePaymentMethod')),
                ('organization_membership', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.OrganizationMembership')),
            ],
        ),
        migrations.CreateModel(
            name='AccountClasspass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_start', models.DateField()),
                ('date_end', models.DateField(null=True)),
                ('note', models.TextField(default='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('organization_classpass', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.OrganizationClasspass')),
                ('classes_remaining', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationAppointment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('display_public', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255)),
                ('organization_appointment_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.OrganizationAppointmentCategory')),
                ('finance_costcenter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='costasiella.FinanceCostCenter')),
                ('finance_glaccount', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='costasiella.FinanceGLAccount')),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationAppointmentPrice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=20)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('finance_tax_rate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.FinanceTaxRate')),
                ('organization_appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.OrganizationAppointment')),
            ],
            options={
                'unique_together': {('account', 'organization_appointment')},
            },
        ),
        migrations.CreateModel(
            name='FinanceInvoiceGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('display_public', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('next_id', models.PositiveIntegerField(default=1)),
                ('due_after_days', models.PositiveSmallIntegerField(default=30)),
                ('prefix', models.CharField(default='INV', max_length=255)),
                ('prefix_year', models.BooleanField(default=True)),
                ('auto_reset_prefix_year', models.BooleanField(default=True)),
                ('terms', models.TextField(default='')),
                ('footer', models.TextField(default='')),
                ('code', models.CharField(default='', help_text='Journal code in your accounting software.', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='FinanceInvoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('teacher_payment', models.BooleanField(default=False)),
                ('employee_claim', models.BooleanField(default=False)),
                ('relation_company', models.CharField(default='', max_length=255)),
                ('relation_company_registration', models.CharField(default='', max_length=255)),
                ('relation_company_tax_registration', models.CharField(default='', max_length=255)),
                ('relation_contact_name', models.CharField(default='', max_length=255)),
                ('relation_address', models.CharField(default='', max_length=255)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('SENT', 'Sent'), ('PAID', 'Paid'), ('CANCELLED', 'Cancelled')], default='DRAFT', max_length=255)),
                ('summary', models.CharField(default='', max_length=255)),
                ('invoice_number', models.CharField(default='', max_length=255)),
                ('date_sent', models.DateField()),
                ('date_due', models.DateField()),
                ('terms', models.TextField(default='')),
                ('footer', models.TextField(default='')),
                ('note', models.TextField(default='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('finance_invoice_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.FinanceInvoiceGroup')),
                ('finance_payment_method', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='costasiella.FinancePaymentMethod')),
                ('balance', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('paid', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('total', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('tax', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('account', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('relation_city', models.CharField(default='', max_length=255)),
                ('relation_country', models.CharField(default='', max_length=255)),
                ('relation_postcode', models.CharField(default='', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='FinanceInvoiceGroupDefault',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_type', models.CharField(default='', max_length=255)),
                ('finance_invoice_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.FinanceInvoiceGroup')),
            ],
        ),
        migrations.CreateModel(
            name='FinanceInvoiceItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('line_number', models.PositiveSmallIntegerField(default=0)),
                ('product_name', models.CharField(max_length=255)),
                ('description', models.TextField(default='')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=20)),
                ('price', models.DecimalField(decimal_places=2, max_digits=20)),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('tax', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('total', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('finance_costcenter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='costasiella.FinanceCostCenter')),
                ('finance_glaccount', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='costasiella.FinanceGLAccount')),
                ('finance_invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='costasiella.FinanceInvoice')),
                ('finance_tax_rate', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='costasiella.FinanceTaxRate')),
                ('account_classpass', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='costasiella.AccountClasspass')),
            ],
            options={
                'ordering': ('finance_invoice', 'line_number'),
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archived', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255)),
                ('address', models.TextField(default='')),
                ('phone', models.CharField(default='', max_length=255)),
                ('email', models.EmailField(default='', max_length=254)),
                ('registration', models.CharField(default='', max_length=255)),
                ('tax_registration', models.CharField(default='', max_length=255)),
            ],
        ),
        migrations.AlterModelOptions(
            name='scheduleitem',
            options={'permissions': [('view_scheduleclass', 'Can view schedule class'), ('add_scheduleclass', 'Can add schedule class'), ('change_scheduleclass', 'Can change schedule class'), ('delete_scheduleclass', 'Can delete schedule class'), ('view_scheduleappointment', 'Can view schedule appointment'), ('add_scheduleappointment', 'Can add schedule appointment'), ('change_scheduleappointment', 'Can change schedule appointment'), ('delete_scheduleappointment', 'Can delete schedule appointment')]},
        ),
        migrations.CreateModel(
            name='ScheduleItemTeacherAvailable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_start', models.DateField()),
                ('date_end', models.DateField(default=None, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('schedule_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.ScheduleItem')),
            ],
        ),
        migrations.CreateModel(
            name='ScheduleItemAttendance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_has_membership', models.BooleanField(default=False)),
                ('attendance_type', models.CharField(choices=[['TRIAL', 'Trial'], ['DROPIN', 'Drop in'], ['CLASSPASS', 'Classpass'], ['SUBSCRIPTION', 'Subscription'], ['COMPLEMENTARY', 'Complementary'], ['REVIEW', 'To be reviewed'], ['RECONCILE_LATER', 'Reconcile later']], max_length=255)),
                ('date', models.DateField()),
                ('online_booking', models.BooleanField(default=False)),
                ('booking_status', models.CharField(choices=[['BOOKED', 'Booked'], ['ATTENDING', 'Attending'], ['CANCELLED', 'Cancelled']], max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('account_classpass', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='costasiella.AccountClasspass')),
                ('account_subscription', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='costasiella.AccountSubscription')),
                ('finance_invoice_item', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='costasiella.FinanceInvoiceItem')),
                ('schedule_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.ScheduleItem')),
            ],
        ),
        migrations.CreateModel(
            name='AppSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_format', models.CharField(choices=[('YYYY-MM-DD', 'YYYY-MM-DD'), ('MM-DD-YYYY', 'MM-DD-YYYY'), ('DD-MM-YYYY', 'DD-MM-YYYY')], default='YYYY-MM-DD', max_length=255)),
                ('time_format', models.CharField(choices=[('24', '24 Hr (HH:mm)'), ('12', '12 Hr (hh:mm am/pm)')], default='24', max_length=255)),
            ],
        ),
        migrations.AddField(
            model_name='scheduleitem',
            name='account',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='si_account', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='scheduleitem',
            name='account_2',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='si_account_2', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='scheduleitem',
            name='role',
            field=models.CharField(choices=[['', 'Regular'], ['SUB', 'Subteacher'], ['ASSISTANT', 'Assistant'], ['KARMA', 'Karma']], default='', max_length=50),
        ),
        migrations.AddField(
            model_name='scheduleitem',
            name='role_2',
            field=models.CharField(choices=[['', 'Regular'], ['SUB', 'Subteacher'], ['ASSISTANT', 'Assistant'], ['KARMA', 'Karma']], default='', max_length=50),
        ),
        migrations.CreateModel(
            name='ScheduleItemWeeklyOTC',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('time_start', models.TimeField(null=True)),
                ('time_end', models.TimeField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('organization_classtype', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='costasiella.OrganizationClasstype')),
                ('organization_level', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='costasiella.OrganizationLevel')),
                ('organization_location_room', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='costasiella.OrganizationLocationRoom')),
                ('schedule_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.ScheduleItem')),
                ('description', models.CharField(default='', max_length=255)),
                ('account', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='otc_account', to=settings.AUTH_USER_MODEL)),
                ('account_2', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='otc_account_2', to=settings.AUTH_USER_MODEL)),
                ('role', models.CharField(choices=[['', 'Regular'], ['SUB', 'Subteacher'], ['ASSISTANT', 'Assistant'], ['KARMA', 'Karma']], default='', max_length=50)),
                ('role_2', models.CharField(choices=[['', 'Regular'], ['SUB', 'Subteacher'], ['ASSISTANT', 'Assistant'], ['KARMA', 'Karma']], default='', max_length=50)),
                ('status', models.CharField(choices=[['', 'Regular'], ['CANCELLED', 'Cancelled'], ['OPEN', 'No teacher']], default='', max_length=255)),
            ],
            options={
                'permissions': [('view_scheduleclassweeklyotc', 'Can view schedule class weekly one time change'), ('add_scheduleclassweeklyotc', 'Can add schedule class weekly one time change'), ('change_scheduleclassweeklyotc', 'Can change schedule class weekly one time change'), ('delete_scheduleclassweeklyotc', 'Can delete schedule class weekly one time change')],
            },
        ),
        migrations.AddField(
            model_name='scheduleitem',
            name='description',
            field=models.CharField(default='', max_length=255),
        ),
        migrations.AddField(
            model_name='scheduleitem',
            name='status',
            field=models.CharField(choices=[['', 'Regular'], ['CANCELLED', 'Cancelled'], ['OPEN', 'No teacher']], default='', max_length=255),
        ),
        migrations.CreateModel(
            name='OrganizationDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[['TERMS_AND_CONDITIONS', 'Terms and conditions'], ['PRIVACY_POLICY', 'Privacy policy']], max_length=50)),
                ('date_start', models.DateField()),
                ('date_end', models.DateField(null=True)),
                ('document', models.FileField(default=None, upload_to='organization_document')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.Organization')),
                ('version', models.CharField(default='', max_length=50)),
            ],
            options={
                'ordering': ['-date_start'],
            },
        ),
        migrations.CreateModel(
            name='AccountAcceptedDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_accepted', models.DateTimeField(auto_now_add=True)),
                ('client_ip', costasiella.modules.encrypted_fields.EncryptedTextField(default='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('document', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='costasiella.OrganizationDocument')),
            ],
        ),
        migrations.AddField(
            model_name='organizationclasspass',
            name='trial_pass',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='organizationclasspass',
            name='trial_times',
            field=models.PositiveIntegerField(default=1, help_text='Number of times this pass can be bought by a customer. (Only used when trial card is selected)'),
        ),
        migrations.CreateModel(
            name='ScheduleItemPrice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_start', models.DateField()),
                ('date_end', models.DateField(default=None, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('organization_classpass_dropin', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='organizationclasspassesdropin', to='costasiella.OrganizationClasspass')),
                ('organization_classpass_trial', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='organizationclasspassestrial', to='costasiella.OrganizationClasspass')),
                ('schedule_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='costasiella.ScheduleItem')),
            ],
        ),
        migrations.CreateModel(
            name='FinanceInvoicePayment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=20)),
                ('date', models.DateField()),
                ('note', models.TextField(default='')),
                ('finance_invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='costasiella.FinanceInvoice')),
                ('finance_payment_method', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='costasiella.FinancePaymentMethod')),
            ],
        ),
    ]
